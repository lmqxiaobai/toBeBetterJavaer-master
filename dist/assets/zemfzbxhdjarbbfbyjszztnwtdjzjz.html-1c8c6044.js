const t=JSON.parse('{"key":"v-960af720","path":"/nice-article/other/zemfzbxhdjarbbfbyjszztnwtdjzjz.html","title":"如何防止jar包被反编译？","lang":"zh-CN","frontmatter":{"title":"如何防止jar包被反编译？","shortTitle":"如何防止jar包被反编译？","description":"Java作为解释型的语言，其高度抽象的特性意味其很容易被反编译，容易被反编译，自然有防止反编译措施存在。今天就拜读了一篇相关的文章，受益匪浅，知彼知己嘛！！之所以会对java的反编译感兴趣，那是因为自己在学习的过程中，常常需...","tag":["优质文章"],"category":["其他网站"],"head":[["meta",{"name":"keywords","content":"安全,java"}],["meta",{"property":"og:url","content":"https://javabetter.cn/nice-article/other/zemfzbxhdjarbbfbyjszztnwtdjzjz.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"如何防止jar包被反编译？"}],["meta",{"property":"og:description","content":"Java作为解释型的语言，其高度抽象的特性意味其很容易被反编译，容易被反编译，自然有防止反编译措施存在。今天就拜读了一篇相关的文章，受益匪浅，知彼知己嘛！！之所以会对java的反编译感兴趣，那是因为自己在学习的过程中，常常需..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T13:49:42.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"优质文章"}],["meta",{"property":"article:modified_time","content":"2022-12-26T13:49:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何防止jar包被反编译？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T13:49:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"一、常用的保护技术","slug":"一、常用的保护技术","link":"#一、常用的保护技术","children":[]},{"level":2,"title":"二、混淆技术介绍","slug":"二、混淆技术介绍","link":"#二、混淆技术介绍","children":[]}],"git":{"createdTime":1671605820000,"updatedTime":1672062582000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":3}]},"readingTime":{"minutes":11.37,"words":3411},"filePathRelative":"nice-article/other/zemfzbxhdjarbbfbyjszztnwtdjzjz.md","localizedDate":"2022年12月21日","excerpt":"<p>Java 作为解释型的编程语言，其高度抽象的特性意味其很容易被反编译，容易被反编译，自然就存在防止反编译的措施。今天就来和球友们聊一聊 <strong>如何防止 jar 包被反编译</strong>！！</p>\\n<h2> 一、常用的保护技术</h2>\\n<p>通常，这些方法不能绝对防止程序被反编译，而是加大反编译的难度，因为这些方法都有自己的使用环境和弱点。</p>\\n<p><strong>1. 隔离 Java 程序</strong></p>\\n<p>最简单的方法就是让用户不能够访问到 Java Class 程序，这种方法是最根本的方法，具体实现有多种方式。</p>\\n<p>例如，可以将关键的 Java Class 放在服务器端，客户端通过访问服务器的相关接口来获得服务，而不是直接访问 Class 文件。这样黑客就没有办法反编译 Class 文件。目前，通过接口提供服务的标准和协议也越来越多，例如 HTTP、Web Service、RPC 等。但是有很多应用都不适合这种保护方式，例如对于单机运行的程序就无法隔离 Java 程序。这种保护方式见图 1 所示。</p>"}');export{t as data};
