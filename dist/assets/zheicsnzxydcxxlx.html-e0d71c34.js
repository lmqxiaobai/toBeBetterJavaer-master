import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c as a,a as e,b as i,d as t,e as o}from"./app-1c5b5ce3.js";const p={},c=o("<p>球友好。</p><p>不知道你现在大几，我就按照大学阶段从 0 到 1 的方式来给你整一份学习路线。早上问了一些专业的 C++ 选手，他们也给我推荐了一些路线，我这里全部整理出来。</p><p>对于零基础想要学学 C++ 的同学，我希望你们要先明白一件事：</p><blockquote><p>C++ 是一门极难掌握的编程语言，内容多且杂且难懂。</p></blockquote><p>所以<strong>如果你想要想要学好 C++，你要花很多的时间和精力。</strong></p><p>当然这件事我也想告诉你：如果你在刚开始学或者学了很短的一段时间，发现自己学不会，默默告诉自己“这不是我的原因，是 C++ 的原因，都赖它太难”。</p><p>我不希望同学们还没入门就放弃。</p><p>C++ 较底层，语法非常的灵活，这就造成了它的语法规则比较的繁杂，这里面包含了 C 语言的内容，相比较于 Python、Java 等同等的高级语言，学习 C++ 的时间成本更大。</p><p>C++ 是和 C 语言完全不同的编程语言，但是在基础语句和语法上，C++ 和 C 很像，我认为 C++ 可以看成是 C 语言的延展：C ++ 就是一个加了面向对象特性的 C 语言。</p><p>如果你有 C 语言基础的话，学习 C++ 会快一些，有余力可以先学 C 语言的同学，可以看我下面这篇文章：</p>",10),d={href:"https://zhuanlan.zhihu.com/p/416406696",target:"_blank",rel:"noopener noreferrer"},g=o("<p>当然没有 C 语言，直接学 C++ 也是没问题的。</p><p><strong>C++的上限非常高，但是分阶段性逐步学习是没有问题的，一步步的学，慢慢领悟，总有一天会熟练掌握的。</strong></p><p>C++ 语言的学习其实就<strong>三个阶段</strong>就好了：</p><p><strong>(1) 入门阶段</strong></p><p>这个阶段的学习主要是熟悉 C++ 语言的语法知识。</p><p>在这个阶段要做到理解对象的思想方法，培养自己的编程思维能力。</p><p>目标是可以开发一些像贪吃蛇这种简单的控制台小程序。</p><p><strong>(2) 进阶阶段</strong></p><p>进阶阶段的学习主要是要掌握 C++ 标准模板库（STL）、设计模式、数据结构基础以及 UI 界面开发、数据库开发等高级技能。</p><p>在这个阶段是要达到可以开发复杂的程序，达到工作中 C++ 开发程序员的能力。</p><p><strong>(3) 应用阶段</strong></p><p>这个是实战阶段，要具备一定的综合性应用软件开发能力。</p><p>这个阶段就是多观摩别人的项目，看人家的写法，模仿项目，学习其中的思想，一点点的积累，一步步形成自己的东西，厚积而薄发，慢慢你就会发现你也可以了。</p>",13),u=e("strong",null,"注意！下面都是超极干的干货，记得先帮我",-1),h={href:"https://www.zhihu.com/people/62ca0e445f981d4af47929fcd6b318d5",target:"_blank",rel:"noopener noreferrer"},b=o('<h2 id="一、入门阶段" tabindex="-1"><a class="header-anchor" href="#一、入门阶段" aria-hidden="true">#</a> <strong>一、入门阶段</strong></h2><p><strong>入门阶段的学习主要是熟悉 C++ 语言的语法知识。</strong></p><p>除了基础的变量、常量、关键字、数据类型、运算符、数组、函数、指针、结构体外，还要学习 C++ 的面向对象编程思想、命名空间 namespace、引用、函数扩展、类的封装、构造和析构、继承、多态、异常处理等内容。</p><p><strong>语言部分的学习建议不要拖太久，一定要规划好时间，一鼓作气，不然自己容易泄气！</strong></p><h3 id="_1-视频推荐" tabindex="-1"><a class="header-anchor" href="#_1-视频推荐" aria-hidden="true">#</a> 1.视频推荐</h3><p>此时同学们应该是毫无基础或者稍微有点 C 语言基础的小白。</p><p><strong>对于小白来说，不建议上来就看书，因为干看看不懂，容易劝退。</strong></p><p><strong>可以先从视频教程开始，教材为辅。</strong></p><p>我当初 C++ 视频是在 b 站看的黑马程序员的 C++ 课程（我不是他们的托儿</p><p>从 0 到 1 教 C++，三百多个小节，每个小节时间都不是很长，除了个别几个在二十多分钟，其余的基本上都在几分钟到十几分钟之间。</p><figure><img src="https://pic1.zhimg.com/v2-af56691fabfaf868656fe9e843b27ea0_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>每一个阶段都会有相应的小项目教学，对初学者来说是很友好的。</p>',12),m={href:"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av41559729%3Fp%3D1",target:"_blank",rel:"noopener noreferrer"},f=o('<p><strong>看视频的时候不是看看就过去了，编程毕竟是门一门手艺活，孰能生巧。</strong></p><p><strong>建议一边看，一边将视频中的示例或者小项目教学自己也实现一下，刚开始不会可以照着敲，比只看不动手强一百倍。</strong></p><h3 id="_2-书籍推荐" tabindex="-1"><a class="header-anchor" href="#_2-书籍推荐" aria-hidden="true">#</a> 2.书籍推荐</h3><p>入门阶段的书籍为辅，怎么为辅呢？</p><p>就是<strong>视频看完一个阶段，然后就可以去看书上对应阶段的内容，这样看书，一方面看书的时候会很快，容易理解，另一方面可以印证自己在看视频的时候一些不太理解的地方。</strong></p><p>入门阶段推荐两本书，一本薄的，一本厚的，都是超级经典的书籍。</p><p><strong>《Essential C++》</strong></p><p>《Essential C++》是一本内容不多但很实用的 C++ 入门书籍，这本书强调的是快速上手与理解 C++ 编程。</p><p>主要围绕一系列逐渐复杂的程序问题，以及用以解决这些问题的语言特性展开讲解。</p><p>你不只学到 C++ 的函数和结构，也会学习到它们的设计目的和基本原理。</p><figure><img src="https://pic1.zhimg.com/v2-e0a9cb1393f60a3aed27d48fb1a537d0_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>《C++ Primer》</strong></p><p>很多人 C++ 入门的时候会推荐《C++ Primer Plus》，但是我更强烈推荐的是这本《C++ Primer》！</p><figure><img src="https://pic1.zhimg.com/v2-524949a233b4983b65808cad5f52c4c0_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这两本书我都看过，很有发言权，当时我学习的时候《C++ Primer》还是第 4 版，现在都到第 5 版了！</p><p>《C++ Primer》堪称 C++ 语法学习的最权威书籍，非常全面地讲解了C++的语法以及C++11的各种新特性，看完之后真的帮助特别大！</p><p>如果有时间建议至少看两遍以上！时面向 C++ 语言的初学者，是一本很友好的自学教材！而且例程和习题丰富，相信认真读过之后，可以完成 C++ 语言入门这个目标！！</p><figure><img src="https://pic2.zhimg.com/v2-f695d1e147877b4b6504b7baab4ca7e1_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果你在这个阶段觉得差不多了，可以尝试找一些在线的练习题做下，如果你不知道去哪找，那可以去下面这个初学者练习编程巩固语法的绝佳去处。</p><p>它有专门的 C++ 入门编程练习题，专门练习语法和大家的编程逻辑，从变量、数据类型这些<strong>基础语法</strong>，到数组、字符串这种<strong>复合类型</strong>，再到<strong>函数、面向对象</strong>，以及在 C++ 中很重要的 <strong>STL</strong>，最后再来点<strong>综合练习</strong>，差不多 <strong>70 多道题</strong>，够你练的。</p>',20),_={href:"https://link.zhihu.com/?target=https%3A//www.nowcoder.com/link/pc_kol_wenqlgd",target:"_blank",rel:"noopener noreferrer"},v=e("figure",null,[e("img",{src:"https://pic3.zhimg.com/v2-571bc740cdf5bb8478016070a666c1f2_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),C=e("p",null,"除了编程练习以外，如果你想知道你自己的知识点掌握的如何，也可以做一下专项练习，一共 1700+ 的题目。",-1),k=e("figure",null,[e("img",{src:"https://pic2.zhimg.com/v2-3f2e5f071ea592eca87b1d03430ae7f9_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),z=e("p",null,"以类似试卷的形式，可以很好的检验自己的学习成果，不管是对之后应对考试，或者应付笔试面试都很有帮助。",-1),x={href:"https://link.zhihu.com/?target=https%3A//www.nowcoder.com/link/pc_kol_wenqlgd",target:"_blank",rel:"noopener noreferrer"},q=o('<figure><img src="https://pic3.zhimg.com/v2-6df9513d87fc2a488a97c9b88f4a02aa_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、进阶阶段" tabindex="-1"><a class="header-anchor" href="#二、进阶阶段" aria-hidden="true">#</a> <strong>二、进阶阶段</strong></h2><p>在进阶阶段，你已经对 C++ 有一定的认知了。</p><p>这个时候我们可以深入学习 C++ 标准模板库（STL）、设计模式、数据结构基础以及 UI 界面开发、数据库开发等高级技能。</p><h3 id="_1-书籍推荐" tabindex="-1"><a class="header-anchor" href="#_1-书籍推荐" aria-hidden="true">#</a> 1.书籍推荐</h3><p><strong>《C++标准程序库》</strong></p><p>关于 STL，可以先读这本侯捷老师翻译的《C++ 标准程序库》。</p><p>通过这本书对STL有个基本认识，学会使用 STL。</p><figure><img src="https://pic4.zhimg.com/v2-785063863072d1a7c331c56abbf1fc9b_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>《STL源码剖析》</strong></p><p>读完 《C++ 标准程序库》，就可以来读这本侯捷老师编写的《STL源码剖析》了。</p><p>这本书建议必读！</p><p>这本书讲解了 C++ 底层实现，主要包括 C++ 底层内存管理、各种容器的数据结构实现、常见算法的实现等。</p><p>可以帮助深入理解C++底层，同时也是对数据结构的复习和巩固。</p><figure><img src="https://pic2.zhimg.com/v2-d83bc2eb69c0c6dd6a763d2767cfec79_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>《Effective C++》</strong></p><p>《Effective C++》讲了 C++ 编程的 55 条准则，提高你的 C++ 编程质量，也是侯捷老师翻译的！</p><p>这本书有助于梳理在编写 C++ 程序时的一些常见错误和注意事项，也是面试常考的。</p><figure><img src="https://pic1.zhimg.com/v2-98fe5a44943bf3519617ab7903c6f480_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>《深度探索C++对象模型》</strong></p><p>《深度探索C++对象模型》这本书讲解了C++面向对象特性的底层实现机制。</p><p>侯捷老师翻译的，看完这本书，对C++面向对象的理解帮助极大，建议必读！</p><figure><img src="https://pic2.zhimg.com/v2-c79565e30dd5f84d4dc0000290cae339_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-视频推荐" tabindex="-1"><a class="header-anchor" href="#_2-视频推荐" aria-hidden="true">#</a> 2.视频推荐</h3><p>不知道大家注意了没，上面我推荐了四本书，都和一个人有关：侯捷老师。</p><p>书要么是他翻译的，要么是他写的，C++ 领域 YYDS！同意吧？</p><p>侯捷老师当然也有讲课，针对书都有对应内容的视频课程！</p><p>怎么样？香吧！原先这些课本来可以在 B 站看的，但是不知道为啥，都下架了，sad。</p><p><strong>我搜集了一套非常全的侯捷老师的 C++ 视频，有需要的可以去下载保存备用。</strong></p><figure><img src="https://pic3.zhimg.com/v2-479158e9f7ddaf0e2b04a53d78fc1f62_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>视频地址：</strong></p>',31),w={href:"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzI0NjAxMDU5NA%3D%3D%26mid%3D2475922860%26idx%3D1%26sn%3D2115db904d80e58532bf4533c60c31b8%26chksm%3Dff22f221c8557b370dca60c4e209108be82156dbc957181d6de711e7cf1b4dbafa2bf753c0b5%26token%3D1153516574%26lang%3Dzh_CN%23rd",target:"_blank",rel:"noopener noreferrer"},y=o('<h2 id="三、应用阶段" tabindex="-1"><a class="header-anchor" href="#三、应用阶段" aria-hidden="true">#</a> <strong>三、应用阶段</strong></h2><p>其实编程语言就是要多练，怎么多练，就是代码量。</p><p>自己多写，然后多观摩别人的项目，看人家的写法，模仿项目，学习其中的思想，一点点的积累，一步步形成自己的东西，厚积而薄发，慢慢你就会发现你也可以了。</p><p>我在这里推荐几个非常优秀的 GitHub 上的实战项目。</p><p><strong>一共推荐 14 个开源项目，7 个入门级，7 个企业级</strong>，保证都是值得学习的开源项目！</p><h3 id="入门级" tabindex="-1"><a class="header-anchor" href="#入门级" aria-hidden="true">#</a> <strong>入门级</strong></h3><p><strong>1.TinyWebServer（3.6k+ star）</strong></p><p>Linux下C++轻量级Web服务器，助力初学者快速实践网络编程，搭建属于自己的服务器.</p><ul><li>使用 <strong>线程池 + 非阻塞socket + epoll(ET和LT均实现) + 事件处理(Reactor和模拟Proactor均实现)</strong> 的并发模型</li><li>使用<strong>状态机</strong>解析HTTP请求报文，支持解析<strong>GET和POST</strong>请求</li><li>访问服务器数据库实现web端用户<strong>注册、登录</strong>功能，可以请求服务器<strong>图片和视频文件</strong></li><li>实现<strong>同步/异步日志系统</strong>，记录服务器运行状态</li><li>经Webbench压力测试可以实现<strong>上万的并发连接</strong>数据交换</li></ul>',9),S={href:"https://link.zhihu.com/?target=https%3A//github.com/qinguoyi/TinyWebServer",target:"_blank",rel:"noopener noreferrer"},A=e("p",null,[e("strong",null,"2.libqalculate（545 star）")],-1),L=e("p",null,"使用 C++ 编写的多功能计算器桌面应用、库和 CLI 程序。",-1),T=e("p",null,"它易于使用功能强大，支持大型可定制函数库、单位计算和转换、符号计算（包括积分和方程）。",-1),D={href:"https://link.zhihu.com/?target=https%3A//github.com/Qalculate/qalculate-qt",target:"_blank",rel:"noopener noreferrer"},P={href:"https://link.zhihu.com/?target=https%3A//github.com/Qalculate/qalculate-gtk",target:"_blank",rel:"noopener noreferrer"},j=o(`<figure><img src="https://pic3.zhimg.com/v2-227ef62815eb9b0023b5d65d69640ebe_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>3.spdlog（12.7k+）</strong></p><p>快速、上手简单的 C++ 日志库。示例代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#include &quot;spdlog/spdlog.h&quot;

int main() 
{
    spdlog::info(&quot;Welcome to spdlog!&quot;);
    spdlog::error(&quot;Some error message with arg: {}&quot;, 1);

    spdlog::warn(&quot;Easy padding in numbers like {:08d}&quot;, 12);
    spdlog::critical(&quot;Support for int: {0:d};  hex: {0:x};  oct: {0:o}; bin: {0:b}&quot;, 42);
    spdlog::info(&quot;Support for floats {:03.2f}&quot;, 1.23456);
    spdlog::info(&quot;Positional args are {1} {0}..&quot;, &quot;too&quot;, &quot;supported&quot;);
    spdlog::info(&quot;{:&lt;30}&quot;, &quot;left aligned&quot;);

    spdlog::set_level(spdlog::level::debug); // Set global log level to debug
    spdlog::debug(&quot;This message should be displayed..&quot;);    

    // change log pattern
    spdlog::set_pattern(&quot;[%H:%M:%S %z] [%n] [%^---%L---%$] [thread %t] %v&quot;);

    // Compile time log levels
    // define SPDLOG_ACTIVE_LEVEL to desired level
    SPDLOG_TRACE(&quot;Some trace message with param {}&quot;, 42);
    SPDLOG_DEBUG(&quot;Some debug message&quot;);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4.CPlusPlusThings（15.4k+star）</strong></p><p>这是一个适合 C++ 初学者从入门到进阶的教程。</p><p>解决了面试者想要深入 C++ 及如何入坑 C++ 的问题。</p><p>除此之外，该仓库拓展了更加深入的语法分析、多线程并发等的知识，是一个比较全面的 C++ 从入门学习到进阶提升的项目。</p><p><strong>5.indicators（1.7k+star）</strong></p><p>一个使用 C++ 编写的进度条库，你可以用它在命令行中实现美观的进度条。它使用方便、线程安全、支持多种进度条样式。</p><p><strong>6.sudoku（299 star）</strong></p><p>C++ 实现的命令行数独游戏。600 余行代码，初学者也可以轻松学习。</p><figure><img src="https://pic4.zhimg.com/v2-94f3e6666f15a1a75a0d0f1bcb626c7b_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>7.dbg-macro（1.7k+）</strong></p>`,14),W={href:"https://link.zhihu.com/?target=https%3A//github.com/sharkdp/dbg-macro",target:"_blank",rel:"noopener noreferrer"},E={href:"https://link.zhihu.com/?target=https%3A//www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://link.zhihu.com/?target=https%3A//doc.rust-lang.org/std/macro.dbg.html",target:"_blank",rel:"noopener noreferrer"},B=o(`<ul><li>美观的彩色输出（当输出不是交互式终端时，颜色将自动禁用）</li><li>兼容 C++11，并且是 header-only</li><li>支持基础类型和 STL 容器类型的输出</li><li>除了基本信息外，还输出变量名和类型</li><li>启用 DBG<em>MACRO</em>DISABLE 生成 release 版</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#include &lt;vector&gt;
#include &lt;dbg.h&gt;

// You can use &quot;dbg(..)&quot; in expressions:
int factorial(int n) {
  if (dbg(n &lt;= 1)) {
    return dbg(1);
  } else {
    return dbg(n * factorial(n - 1));
  }
}

int main() {
  std::string message = &quot;hello&quot;;
  dbg(message);  // [example.cpp:15 (main)] message = &quot;hello&quot; (std::string)
  const int a = 2;
  const int b = dbg(3 * a) + 1;  // [example.cpp:18 (main)] 3 * a = 6 (int)
  std::vector&lt;int&gt; numbers{b, 13, 42};
  dbg(numbers);  // [example.cpp:21 (main)] numbers = {7, 13, 42} (size: 3) (std::vector&lt;int&gt;)
  dbg(&quot;this line is executed&quot;);  // [example.cpp:23 (main)] this line is executed
  factorial(4);
  return 0;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic2.zhimg.com/v2-aa9deff96924a663b94f464ef1d5c729_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="企业级" tabindex="-1"><a class="header-anchor" href="#企业级" aria-hidden="true">#</a> <strong>企业级</strong></h3><p><strong>1.rocksdb（21.1k+ star）</strong></p><p>该项目是由 Fackbook 数据库团队基于 levelDB 开发，用 C++ 编写的高性能键值存储引擎。</p><p>键值均支持二进制流，能够充分利用多核 CPU 获得高性能，并兼容 levelDB 的 API 可谓是青出于蓝而胜于蓝。RocksDB 当下十分流行，一些开源数据库底层存储用的就是它。</p>`,7),I={href:"https://link.zhihu.com/?target=https%3A//github.com/facebook/rocksdb",target:"_blank",rel:"noopener noreferrer"},O=e("p",null,[e("strong",null,"2.winmerge（2.2k+ star）")],-1),N=e("p",null,"一个用 C++ 编写的 Windows 比较和合并工具。",-1),R=e("p",null,"它可以比较文件和文件夹，以直观的可视化格式来显示两者甚至三者之间的差异，操作简单。",-1),M=e("figure",null,[e("img",{src:"https://pic3.zhimg.com/v2-2ddb343635048094c9085f2a35b9623e_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),H={href:"https://link.zhihu.com/?target=https%3A//github.com/WinMerge/winmerge",target:"_blank",rel:"noopener noreferrer"},V=o("<p><strong>3.workflow（6.1k+ star）</strong></p><p>搜狗开源的 C++ 服务器引擎。</p><p>支撑搜狗几乎所有后端 C++ 在线服务：</p><ul><li>所有搜索服务</li><li>云输入法</li><li>广告</li><li>....</li></ul><p>每日处理超百亿请求。</p><p>这是一个设计轻盈优雅的企业级程序引擎，可以满足大多数 C++ 后端开发需求。</p>",6),F={href:"https://link.zhihu.com/?target=https%3A//github.com/sogou/workflow",target:"_blank",rel:"noopener noreferrer"},U=e("p",null,[e("strong",null,"4.srpc（825 star）")],-1),Q=e("p",null,"搜狗基于 C++ Workflow 的高性能 RPC 框架。",-1),Y=e("p",null,"与 thrift/brpc 协议兼容，支持 protobuf/thrift IDL一键迁移，核心代码量仅 1w 行。",-1),J=e("figure",null,[e("img",{src:"https://pic1.zhimg.com/v2-60dc921e0bf06be7d5fbd01453416774_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),K={href:"https://link.zhihu.com/?target=https%3A//github.com/sogou/srpc",target:"_blank",rel:"noopener noreferrer"},$=e("p",null,[e("strong",null,"5.nvui（1.2k+ star）")],-1),X=e("p",null,"跨平台现代的 Neovim 前端。",-1),Z=e("p",null,"它使用起来流畅，动画效果细腻、美观，你可以用 Neovim 和 nvui 自由定制出一个高颜值、最懂你的编辑器。",-1),ee=e("figure",null,[e("img",{src:"https://pic1.zhimg.com/v2-d18b08069ee057b74957f803e8258620_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),te={href:"https://link.zhihu.com/?target=https%3A//github.com/rohit-px2/nvui",target:"_blank",rel:"noopener noreferrer"},ne=e("p",null,[e("strong",null,"6.filament（12.1k+ star）")],-1),ie=e("p",null,"filament 是轻量级实时物理渲染引擎。",-1),oe=e("p",null,"能够用来做游戏渲染引擎或者音视频编辑工程，当你需要处理 3D 渲染效果，又不想引入庞大的游戏引擎时，可以考虑使用它尤其是 Android 平台。",-1),re=e("figure",null,[e("img",{src:"https://pic3.zhimg.com/v2-555adb9b154e014672f2764544ee9caa_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),se={href:"https://link.zhihu.com/?target=https%3A//github.com/google/filament",target:"_blank",rel:"noopener noreferrer"},le=e("p",null,[e("strong",null,"7.hplayer（451 star）")],-1),ae=e("p",null,"一个基于 C++ 实现的多画面播放器。",-1),pe=e("p",null,"能播放文件源、网络源、设备捕获源，界面为多画面监控网格，可自由切换多画面风格，支持拖拽与合并。适合想要入门音视频、播放器开发的小伙伴们学习，该项目用到的技术栈：",-1),ce=e("ul",null,[e("li",null,"Qt 实现界面"),e("li",null,"FFmpeg 获取帧、编解码、转码"),e("li",null,"OpenCV 处理图片"),e("li",null,"OpenGL 渲染视频帧")],-1),de=e("figure",null,[e("img",{src:"https://pic4.zhimg.com/v2-d6c32f79d0090fc7f2c2b1c1416ede3b_b.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),ge={href:"https://link.zhihu.com/?target=https%3A//github.com/ithewei/hplayer",target:"_blank",rel:"noopener noreferrer"},ue=o('<h2 id="希望对你有所帮助" tabindex="-1"><a class="header-anchor" href="#希望对你有所帮助" aria-hidden="true">#</a> 希望对你有所帮助</h2><p>其实说实话，本科的同学 C++ 水平真是天差地別的。</p><p>你能学到什么程度，就看你的努力程度了。</p><p>最后再送给学习 C++ 的同学一段浙大翁凯老师讲课说的话：</p><blockquote><p>学 C++ (计算机)一定要有一个非常强大的心理状态。</p><p>为什么呢？</p><p>C++ （计算机）的所有东西都是人做出来的，别人能想出来的我也一定想得出来，在 C++（计算机）里头没有任何黑魔法，所有的东西只不过是我现在不知道而已。</p><p>总有一天我会把它里面的细节搞明白的！</p></blockquote><p>大家加油！</p>',6),he={href:"https://zhuanlan.zhihu.com/p/435927070",target:"_blank",rel:"noopener noreferrer"};function be(me,fe){const n=s("ExternalLinkIcon");return l(),a("div",null,[c,e("p",null,[e("a",d,[i(n)])]),g,e("p",null,[u,t(),e("strong",null,[e("a",h,[t("@Rocky0429"),i(n)]),t(" 点个赞呀，么么哒。")])]),b,e("p",null,[e("a",m,[i(n)])]),f,e("blockquote",null,[e("p",null,[t("传送门："),e("a",_,[t("在线编程_编程学习|练习题_C++|系统设计题库"),i(n)])])]),v,C,k,z,e("blockquote",null,[e("p",null,[t("传送门："),e("a",x,[t("在线编程_编程学习|练习题_C++|系统设计题库"),i(n)])])]),q,e("p",null,[e("a",w,[i(n)])]),y,e("blockquote",null,[e("p",null,[t("传送门："),e("a",S,[t("GitHub - qinguoyi/TinyWebServer: Linux下C++轻量级Web服务器"),i(n)])])]),A,L,T,e("p",null,[t("作为用户你可以直接在命令行中使用，作为开发者你也可以在自己的项目中使用这个库。官方还制作了"),e("a",D,[t("Qt"),i(n)]),t("和"),e("a",P,[t("GTK"),i(n)]),t("两个版本的 GUI 计算器应用。")]),j,e("p",null,[t("打日志是 C++ 开发中必不可少的一种 debug 方式，"),e("a",W,[t("dbg-macro"),i(n)]),t(" 受 "),e("a",E,[t("rust-lang"),i(n)]),t(" 中 的 "),e("a",G,[t("dbg"),i(n)]),t(" 启发，提供比 printf 和 std::cout 更好的宏函数。主要有如下特点：")]),B,e("blockquote",null,[e("p",null,[t("传送门："),e("a",I,[t("https://github.com/facebook/rocksdb"),i(n)])])]),O,N,R,M,e("blockquote",null,[e("p",null,[t("传送门："),e("a",H,[t("GitHub - WinMerge/winmerge: WinMerge is an Open Source differencing and merging tool for Windows. WinMerge can compare both folders and files, presenting differences in a visual text format that is easy to understand and handle."),i(n)])])]),V,e("blockquote",null,[e("p",null,[t("传送门："),e("a",F,[t("https://github.com/sogou/workflow"),i(n)])])]),U,Q,Y,J,e("blockquote",null,[e("p",null,[t("传送门："),e("a",K,[t("GitHub - sogou/srpc: RPC based on C++ Workflow. Supports Baidu bRPC, Tencent tRPC, thrift protocols."),i(n)])])]),$,X,Z,ee,e("blockquote",null,[e("p",null,[t("传送门："),e("a",te,[t("https://github.com/rohit-px2/nvui"),i(n)])])]),ne,ie,oe,re,e("blockquote",null,[e("p",null,[t("传送门："),e("a",se,[t("GitHub - google/filament: Filament is a real-time physically based rendering engine for Android, iOS, Windows, Linux, macOS, and WebGL2"),i(n)])])]),le,ae,pe,ce,de,e("blockquote",null,[e("p",null,[t("传送门："),e("a",ge,[t("https://github.com/ithewei/hpla"),i(n)])])]),ue,e("blockquote",null,[e("p",null,[t("参考链接："),e("a",he,[t("https://zhuanlan.zhihu.com/p/435927070"),i(n)]),t("，整理：沉默王二")])])])}const Ce=r(p,[["render",be],["__file","zheicsnzxydcxxlx.html.vue"]]);export{Ce as default};
