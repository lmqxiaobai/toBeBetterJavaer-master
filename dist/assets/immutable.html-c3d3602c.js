const t=JSON.parse('{"key":"v-a45f0e08","path":"/string/immutable.html","title":"为什么Java字符串String是不可变的？","lang":"zh-CN","frontmatter":{"title":"为什么Java字符串String是不可变的？","shortTitle":"String为什么不可变","category":["Java核心"],"tag":["数组&字符串"],"description":"本文深入探讨了Java String 类的不可变性及其背后的设计原则。我们将了解不可变字符串如何提高代码的安全性、性能和可维护性，以及为什么Java选择了这种设计。探索String类的内部实现，理解为何Java字符串是不可变的。","head":[["meta",{"name":"keywords","content":"Java, String, 不可变, 字符串"}],["meta",{"property":"og:url","content":"https://javabetter.cn/string/immutable.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"为什么Java字符串String是不可变的？"}],["meta",{"property":"og:description","content":"本文深入探讨了Java String 类的不可变性及其背后的设计原则。我们将了解不可变字符串如何提高代码的安全性、性能和可维护性，以及为什么Java选择了这种设计。探索String类的内部实现，理解为何Java字符串是不可变的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"数组&字符串"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么Java字符串String是不可变的？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[],"git":{"createdTime":1634887330000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":15},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":5}]},"readingTime":{"minutes":5.92,"words":1776},"filePathRelative":"string/immutable.md","localizedDate":"2021年10月22日","excerpt":"<h1> 4.5 String为什么不可变</h1>\\n<p>String 可能是 Java 中使用频率最高的引用类型了，因此 String 类的设计者可以说是用心良苦。</p>\\n<p>比如说 String 的不可变性。</p>\\n<ul>\\n<li>String 类被 <a href=\\"https://javabetter.cn/oo/final.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">final 关键字</a>修饰，所以它不会有子类，这就意味着没有子类可以<a href=\\"https://javabetter.cn/basic-extra-meal/override-overload.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">重写</a>它的方法，改变它的行为。</li>\\n<li>String 类的数据存储在 <code>char[]</code> 数组中，而这个数组也被 final 关键字修饰了，这就表示 String 对象是没法被修改的，只要初始化一次，值就确定了。</li>\\n</ul>"}');export{t as data};
