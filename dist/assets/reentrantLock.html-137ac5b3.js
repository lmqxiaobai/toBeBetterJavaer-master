const t=JSON.parse('{"key":"v-06ad3e4d","path":"/thread/reentrantLock.html","title":"深入理解Java并发重入锁ReentrantLock","lang":"zh-CN","frontmatter":{"title":"深入理解Java并发重入锁ReentrantLock","shortTitle":"重入锁ReentrantLock","description":"深入理解Java并发重入锁ReentrantLock","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,锁,ReentrantLock"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/reentrantLock.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"深入理解Java并发重入锁ReentrantLock"}],["meta",{"property":"og:description","content":"深入理解Java并发重入锁ReentrantLock"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解Java并发重入锁ReentrantLock\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[],"git":{"createdTime":1648037338000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":9},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":4.56,"words":1367},"filePathRelative":"thread/reentrantLock.md","localizedDate":"2022年3月23日","excerpt":"<h1> 深入理解Java并发重入锁ReentrantLock</h1>\\n<p>ReentrantLock重入锁，是实现Lock接口的一个类，也是在实际编程中使用频率很高的一个锁，<strong>支持重入性，表示能够对共享资源能够重复加锁，即当前线程获取该锁再次获取不会被阻塞</strong>。</p>\\n<p>要想支持重入性，就要解决两个问题：</p>\\n<ol>\\n<li>\\n<p>在线程获取锁的时候，如果已经获取锁的线程是当前线程的话则直接再次获取成功；</p>\\n</li>\\n<li>\\n<p>由于锁会被获取n次，那么只有锁在被释放同样的n次之后，该锁才算是完全释放成功。</p>\\n</li>\\n</ol>"}');export{t as data};
