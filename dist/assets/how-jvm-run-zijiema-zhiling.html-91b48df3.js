const e=JSON.parse('{"key":"v-e8fbf108","path":"/jvm/how-jvm-run-zijiema-zhiling.html","title":"Java虚拟机是如何执行字节码指令的？","lang":"zh-CN","frontmatter":{"title":"Java虚拟机是如何执行字节码指令的？","shortTitle":"虚拟机是如何执行字节码指令的？","category":["Java核心"],"tag":["Java虚拟机"],"description":"二哥的Java进阶之路，小白的零基础Java教程，从入门到进阶，虚拟机是如何执行字节码指令的？","head":[["meta",{"name":"keywords","content":"Java,JavaSE,教程,二哥的Java进阶之路,jvm,Java虚拟机,字节码指令"}],["meta",{"property":"og:url","content":"https://javabetter.cn/jvm/how-jvm-run-zijiema-zhiling.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Java虚拟机是如何执行字节码指令的？"}],["meta",{"property":"og:description","content":"二哥的Java进阶之路，小白的零基础Java教程，从入门到进阶，虚拟机是如何执行字节码指令的？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java虚拟机"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java虚拟机是如何执行字节码指令的？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"一. 运行时栈帧结构","slug":"一-运行时栈帧结构","link":"#一-运行时栈帧结构","children":[]},{"level":3,"title":"二. 方法调用","slug":"二-方法调用","link":"#二-方法调用","children":[]},{"level":3,"title":"三. 基于栈的字节码解释执行引擎","slug":"三-基于栈的字节码解释执行引擎","link":"#三-基于栈的字节码解释执行引擎","children":[]}],"git":{"createdTime":1648354033000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":3}]},"readingTime":{"minutes":28.22,"words":8465},"filePathRelative":"jvm/how-jvm-run-zijiema-zhiling.md","localizedDate":"2022年3月27日","excerpt":"<h1> 虚拟机是如何执行字节码指令的？</h1>\\n<p>执行引擎是 Java 虚拟机最核心的组成部分之一。「虚拟机」是相对于「物理机」的概念，这两种机器都有代码执行的能力，区别是物理机的执行引擎是直接建立在处理器、硬件、指令集和操作系统层面上的，而虚拟机执行引擎是由自己实现的，因此可以自行制定指令集与执行引擎的结构体系，并且能够执行那些不被硬件直接支持的指令集格式。</p>\\n<p>在 Java 虚拟机规范中制定了虚拟机字节码执行引擎的概念模型，这个概念模型成为各种虚拟机执行引擎的统一外观（Facade）。在不同的虚拟机实现里，执行引擎在执行 Java 代码的时候可能会有解释执行（通过解释器执行）和编译执行（通过即时编译器产生本地代码执行）两种方式，也可能两者都有，甚至还可能会包含几个不同级别的编译器执行引擎。但从外观上来看，所有 Java 虚拟机的执行引擎是一致的：输入的是字节码文件，处理过程是字节码解析的等效过程，输出的是执行结果。</p>"}');export{e as data};
