import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a as n,d as s,b as t,e as i}from"./app-1c5b5ce3.js";const l={},u=n("p",null,"大家好，我是二哥呀！",-1),r={href:"https://mp.weixin.qq.com/s/3RVsFZ17F0JzoHCLKbQgGw",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"@SpringBootApplication",-1),d=n("code",null,"SpringApplication",-1),m=n("code",null,"run()",-1),v=i(`<p>你别说，看源码的过程还真的是挺有趣，这不，我就发现了一个有意思的点。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ConfigurableApplicationContext</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">StopWatch</span> stopWatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StopWatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	stopWatch<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	stopWatch<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring Boot 是用 StopWatch 来统计耗时的，而通常情况下，我们会用 <code>System.currentTimeMillis()</code> 来统计耗时，对吧？编程喵🐱开源项目里就有这样一段代码，在处理统一日志处理切面的时候。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;webLog()&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">doAround</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> joinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    webLog<span class="token punctuation">.</span><span class="token function">setSpendTime</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对比之下，我们就能发现，JDK 提供的 <code>System.currentTimeMillis()</code> 没有 Spring 提供的 StopWatch 简洁、清晰。</p><p>尤其是在多任务的情况下，StopWatch 简直好用到爆🤗！</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建一个 StopWatch 实例</span>
<span class="token class-name">StopWatch</span> sw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StopWatch</span><span class="token punctuation">(</span><span class="token string">&quot;沉默王二是傻 X&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 开始计时</span>
sw<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;任务1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 停止计时</span>
sw<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;任务1耗时：%d%s.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getLastTaskTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sw<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;任务2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sw<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;任务2耗时：%d%s.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getLastTaskTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;任务数量：%s，总耗时：%ss.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTotalTimeSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到没，是不是很简单？</p><ul><li>先 new 一个 StopWatch 对象</li><li>再 start 开始计时</li><li>然后 stop 停止计时</li><li>最后通过 <code>sw.getLastTaskTimeMillis()</code> 得出时间差</li></ul><p>如果换成 <code>System.currentTimeMillis()</code> 就要了老命，先得声明好几个 long 型的局部变量，然后要第二个减第一个，第三个减第二个，稍微粗心一点（尤其是 CV 大法）时，很容易搞错。</p><p>除了可以通过局部时间，还可以通过 <code>sw.getTotalTimeSeconds()</code> 获取总的耗时。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>任务1耗时：1002ms.
任务2耗时：1105ms.
任务数量：2，总耗时：2.107820109s.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，StopWatch 还提供了一个 <code>sw.prettyPrint()</code> 方法供打印出漂亮的格式化结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>StopWatch &#39;沉默王二是傻 X&#39;: running time = 2108529351 ns
---------------------------------------------
ns         %     Task name
---------------------------------------------
1004338467  048%  任务1
1104190884  052%  任务2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有耗时，有占用百分比，还有任务名，非常清晰。</p><p>除了 Spring，hutool 工具库和 Apache common 工具包都提供了各自的 StopWatch。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-b4ca30f2-9e26-478c-b37c-062f5e3e0076.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看 hutool 工具库中的 StopWatch 源码可以得出，该类其实就来自 Spring 的 StopWatch.java，用法也完全一致。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-cdc28804-8b8e-40fa-a2fe-88b9d2ec57c9.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这说明 hutool 的作者也认为 Spring 的 StopWatch 写得好，哈哈哈😁。</p><p>使用 Beyond compare 比较后也能得出，两者除了一个中文注释，一个英文注释，代码几乎一样。setKeepTaskList 方法有比较大的不同。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-529e5215-b41c-492f-8e7f-a223242a4120.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那也就是说，如果你的项目中没有使用 Spring 全家桶，只用了 hutool 工具包，那就可以使用 hutool 的 StopWatch 来代替 <code>System.currentTimeMillis()</code>。</p><p>通过分析 StopWatch 的 stop 方法源码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentTaskName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Can&#39;t stop StopWatch: it&#39;s not running&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">final</span> <span class="token keyword">long</span> lastTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startTimeNanos<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>totalTimeNanos <span class="token operator">+=</span> lastTime<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>lastTaskInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TaskInfo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentTaskName<span class="token punctuation">,</span> lastTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>taskList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>taskList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lastTaskInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>taskCount<span class="token punctuation">;</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>currentTaskName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实可以发现，StopWatch 的内部是通过 <code>System.nanoTime()</code> 来计时的，本质上和 <code>System.currentTimeMillis()</code> 差别并不大。</p><p>nanoTime 比 currentTimeMillis 的粒度更细，前者是以纳秒为单位，后者是以毫秒为单位。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-a3823870-63a7-4154-9bb9-6994f09f0f39.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意两者都是 native 方法，也就是说，值的粒度其实取决于底层的操作系统。</p><p><strong>看到这，大家可能会恍然大悟，StopWatch 不过是披着一层外衣的 <code>System.currentTimeMillis()</code> 嘛</strong>？</p><p>但妙就妙在，这层外衣足够的漂亮，足够的优雅。StopWatch 可以记录每个子任务的名称，以及按格式化打印结果，尤其是针对多任务统计时更友好一点。</p><p>当然了，除了选择 Spring 和 hutool 的 StopWatch，Apache commons-lang3 的 StopWatch 也是一个不错的可选项，更加灵活多变。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">StopWatch</span> sw <span class="token operator">=</span> <span class="token class-name">StopWatch</span><span class="token punctuation">.</span><span class="token function">createStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;耗时：%dms.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他两个都是通过 new 来创建 StopWatch 对象，commons-lang3 还可以通过 createStarted（创建并立即启动）、create（创建）来完成。</p><p>还可以调用 suspend 方法暂停计时、resume 方法恢复计时、reset 重新计时。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 暂停计时</span>
sw<span class="token punctuation">.</span><span class="token function">suspend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;暂停耗时：%dms.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 恢复计时</span>
sw<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;恢复耗时：%dms.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 停止计时</span>
sw<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;总耗时：%dms.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 重置计时</span>
sw<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 开始计时</span>
sw<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;重置耗时：%dms.\\n&quot;</span><span class="token punctuation">,</span> sw<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ending" tabindex="-1"><a class="header-anchor" href="#ending" aria-hidden="true">#</a> ending</h2>`,37),b={href:"https://mp.weixin.qq.com/s/3RVsFZ17F0JzoHCLKbQgGw",target:"_blank",rel:"noopener noreferrer"},g=n("figure",null,[n("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-7fc972ae-c530-4c91-a1ac-ef7c38494734.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),h=n("p",null,"星球提供的三份专属专栏《Java 面试指南》、《编程喵 🐱（Spring Boot+Vue 前后端分离）实战项目笔记》、《Java 版 LeetCode 刷题笔记》，干货满满，价值连城。",-1),f=n("figure",null,[n("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-e89d40c9-078b-4b2b-9367-2bd707a418fa.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),w=n("figure",null,[n("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-1af7a5f6-312c-4ae9-ab77-3c359389c4a6.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),y=n("strong",null,"480 多名",-1),_={href:"https://mp.weixin.qq.com/s/3RVsFZ17F0JzoHCLKbQgGw",target:"_blank",rel:"noopener noreferrer"},S={href:"https://mp.weixin.qq.com/s/3RVsFZ17F0JzoHCLKbQgGw",target:"_blank",rel:"noopener noreferrer"},x=n("figure",null,[n("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-biezysystemcurrenttimemillistjhsltlowstopwatchhydb-a60262ae-01dc-4e39-affb-b192ca2de1c4.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),j=n("hr",null,null,-1),T=n("p",null,"没有什么使我停留——除了目的，纵然岸旁有玫瑰、有绿荫、有宁静的港湾，我是不系之舟。",-1),q=n("p",null,[n("strong",null,"推荐阅读"),s("：")],-1),W={href:"https://mp.weixin.qq.com/s/KxUMq2YmlIBMbAeRwUm8JA",target:"_blank",rel:"noopener noreferrer"},z={href:"https://mp.weixin.qq.com/s/PxgZkuA_SnAgG7xfwlKLgw",target:"_blank",rel:"noopener noreferrer"},L={href:"https://mp.weixin.qq.com/s/R13FkPipfEMKjqNaCL3UoA",target:"_blank",rel:"noopener noreferrer"},C={href:"https://mp.weixin.qq.com/s/oBLUSnHOmzoVpCP1sacNbA",target:"_blank",rel:"noopener noreferrer"},M=n("figure",null,[n("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-ruhfzddcfzf-da664b36-ac4c-4d16-a345-fc710462b515.jpg",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function A(N,V){const a=p("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("昨天，"),n("a",r,[s("二哥的编程星球"),t(a)]),s("里的一位球友问我能不能给他解释一下 "),k,s(" 注解是什么意思，还有 Spring Boot 的运行原理，于是我就带着他扒拉了一下这个注解的源码，还有 "),d,s(" 类的 "),m,s(" 方法的源码，一下子他就明白了。")]),v,n("p",null,[s("文末给自己的编程星球打个广告。一个人可以走得很快，但一群人才能走得更远。欢迎加入"),n("a",b,[s("二哥的编程星球"),t(a)]),s("，里面的每个球友都非常的友善，除了鼓励你，还会给你提出合理的建议。")]),g,h,f,w,n("p",null,[s("已经有 "),y,s(" 小伙伴加入"),n("a",_,[s("二哥的编程星球"),t(a)]),s("了，如果你也需要一个良好的学习氛围，"),n("a",S,[s("戳链接"),t(a)]),s("加入我们的大家庭吧！这是一个 Java 学习指南 + 编程实战 + LeetCode 刷题的私密圈子，你可以向二哥提问、帮你制定学习计划、跟着二哥一起做实战项目，冲冲冲。")]),x,j,T,q,n("ul",null,[n("li",null,[n("a",W,[s("没必要为实习碰的头破血流"),t(a)])]),n("li",null,[n("a",z,[s("网站挣了 200 美刀后的感触"),t(a)])]),n("li",null,[n("a",L,[s("在 IDEA 里下五子棋不过分吧？"),t(a)])]),n("li",null,[n("a",C,[s("顺利入职了"),t(a)])])]),M])}const F=e(l,[["render",A],["__file","biezysystemcurrenttimemillistjhsltlowstopwatchhydb.html.vue"]]);export{F as default};
