const e=JSON.parse('{"key":"v-03b9fcee","path":"/thread/ConcurrentHashMap.html","title":"吊打Java并发面试官之ConcurrentHashMap","lang":"zh-CN","frontmatter":{"title":"吊打Java并发面试官之ConcurrentHashMap","shortTitle":"ConcurrentHashMap","description":"吊打Java并发面试官之ConcurrentHashMap","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ConcurrentHashMap"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/ConcurrentHashMap.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"吊打Java并发面试官之ConcurrentHashMap"}],["meta",{"property":"og:description","content":"吊打Java并发面试官之ConcurrentHashMap"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"吊打Java并发面试官之ConcurrentHashMap\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"关键属性及类","slug":"关键属性及类","link":"#关键属性及类","children":[{"level":3,"title":"ConcurrentHashMap的关键属性","slug":"concurrenthashmap的关键属性","link":"#concurrenthashmap的关键属性","children":[]},{"level":3,"title":"ConcurrentHashMap中关键内部类","slug":"concurrenthashmap中关键内部类","link":"#concurrenthashmap中关键内部类","children":[]}]},{"level":2,"title":"CAS关键操作","slug":"cas关键操作","link":"#cas关键操作","children":[{"level":3,"title":"1. tabAt","slug":"_1-tabat","link":"#_1-tabat","children":[]},{"level":3,"title":"2. casTabAt","slug":"_2-castabat","link":"#_2-castabat","children":[]},{"level":3,"title":"3. setTabAt","slug":"_3-settabat","link":"#_3-settabat","children":[]}]},{"level":2,"title":"重点方法讲解","slug":"重点方法讲解","link":"#重点方法讲解","children":[{"level":3,"title":"实例构造器方法","slug":"实例构造器方法","link":"#实例构造器方法","children":[]},{"level":3,"title":"initTable方法","slug":"inittable方法","link":"#inittable方法","children":[]},{"level":3,"title":"put方法","slug":"put方法","link":"#put方法","children":[]},{"level":3,"title":"get方法","slug":"get方法","link":"#get方法","children":[]},{"level":3,"title":"transfer方法","slug":"transfer方法","link":"#transfer方法","children":[]},{"level":3,"title":"与size相关的一些方法","slug":"与size相关的一些方法","link":"#与size相关的一些方法","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1648037338000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2},{"name":"Argon","email":"112397278+arglone@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":28.72,"words":8617},"filePathRelative":"thread/ConcurrentHashMap.md","localizedDate":"2022年3月23日","excerpt":"<p>在使用HashMap时，在多线程情况下扩容会出现CPU接近100%的情况，因为hashmap并不是线程安全的，通常我们可以使用在java体系中古老的hashtable类，该类基本上所有的方法都采用synchronized进行线程安全的控制，可想而知，在高并发的情况下，每次只有一个线程能够获取对象监视器锁，这样的并发性能的确不令人满意。</p>\\n<p>另外一种方式通过Collections的<code>Map&lt;K,V&gt; synchronizedMap(Map&lt;K,V&gt; m)</code>将hashmap包装成一个线程安全的map。比如SynchronzedMap的put方法源码为：</p>"}');export{e as data};
