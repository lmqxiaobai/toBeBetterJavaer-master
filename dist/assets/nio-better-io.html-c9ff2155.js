const e=JSON.parse('{"key":"v-1bec7f83","path":"/nio/nio-better-io.html","title":"Java NIO 比传统 IO 强在哪里？","lang":"zh-CN","frontmatter":{"title":"Java NIO 比传统 IO 强在哪里？","shortTitle":"NIO比IO强在哪？","category":["Java核心"],"tag":["Java NIO"],"description":"本篇内容主要讲述了 NIO 和传统 IO 之间的差异。首先，传统 IO 采用阻塞模型，而 NIO 使用非阻塞模型，通过选择器监控多个通道上的 I/O 事件，从而提升性能与可伸缩性。其次，在文件操作方面，传统 IO 依赖字节流或字符流进行文件读写，而 NIO 则利用通道和缓冲区进行操作，性能优势相对较小。最后，在网络传输方面，传统 IO 使用 Socket 和 ServerSocket，而 NIO 提供了 SocketChannel 和 ServerSocketChannel，支持非阻塞网络传输，进一步增强并发处理能力。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"java,nio,io,Java NIO, 传统IO, 非阻塞模式, 缓冲区, 通道, 选择器"}],["meta",{"property":"og:url","content":"https://javabetter.cn/nio/nio-better-io.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Java NIO 比传统 IO 强在哪里？"}],["meta",{"property":"og:description","content":"本篇内容主要讲述了 NIO 和传统 IO 之间的差异。首先，传统 IO 采用阻塞模型，而 NIO 使用非阻塞模型，通过选择器监控多个通道上的 I/O 事件，从而提升性能与可伸缩性。其次，在文件操作方面，传统 IO 依赖字节流或字符流进行文件读写，而 NIO 则利用通道和缓冲区进行操作，性能优势相对较小。最后，在网络传输方面，传统 IO 使用 Socket 和 ServerSocket，而 NIO 提供了 SocketChannel 和 ServerSocketChannel，支持非阻塞网络传输，进一步增强并发处理能力。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-10T14:14:27.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java NIO"}],["meta",{"property":"article:modified_time","content":"2023-04-10T14:14:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java NIO 比传统 IO 强在哪里？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-10T14:14:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\"}]}"]]},"headers":[{"level":3,"title":"01、NIO 和传统 IO 在操作文件时的差异","slug":"_01、nio-和传统-io-在操作文件时的差异","link":"#_01、nio-和传统-io-在操作文件时的差异","children":[]},{"level":3,"title":"02、NIO 和传统 IO 在网络传输中的差异","slug":"_02、nio-和传统-io-在网络传输中的差异","link":"#_02、nio-和传统-io-在网络传输中的差异","children":[]},{"level":3,"title":"03、小结","slug":"_03、小结","link":"#_03、小结","children":[]}],"git":{"createdTime":1680825765000,"updatedTime":1681136067000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":3}]},"readingTime":{"minutes":11.38,"words":3414},"filePathRelative":"nio/nio-better-io.md","localizedDate":"2023年4月7日","excerpt":"<h1> 12.1 NIO比IO强在哪？</h1>\\n<p>我花了几天时间去了解<strong>NIO 的核心知识</strong>，期间看了《Java 编程思想》和《疯狂 Java 讲义》中的 NIO 模块。<strong>但是</strong>，看完之后还是很<strong>迷</strong>，不知道 NIO 是干嘛用的，网上的资料和书上的知识点没有很好地对应上。</p>\\n<p>我这里先给大家展示一副传统 IO 和 NIO 的对比图，感受一下。</p>\\n<figure><img src=\\"https://cdn.tobebetterjavaer.com/stutymore/nio-better-io-20230406180538.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{e as data};
