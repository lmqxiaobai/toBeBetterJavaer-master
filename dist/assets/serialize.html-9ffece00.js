const e=JSON.parse('{"key":"v-adf5afae","path":"/io/serialize.html","title":"Java 序列流：Java 对象的序列化和反序列化","lang":"zh-CN","frontmatter":{"title":"Java 序列流：Java 对象的序列化和反序列化","shortTitle":"序列流(序列化和反序列化)","category":["Java核心"],"tag":["Java IO"],"description":"本文详细介绍了 Java 序列流在对象序列化和反序列化中的重要作用，阐述了其如何有效地将 Java 对象持久化存储和恢复。同时，文章还提供了序列流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 序列流以及其在 Java 编程中的关键地位，提高数据持久化和恢复的效率。","head":[["meta",{"name":"keywords","content":"Java,Java IO,序列化流,java序列化,java反序列化,ObjectOutputStream,ObjectInputStream,java 序列流"}],["meta",{"property":"og:url","content":"https://javabetter.cn/io/serialize.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Java 序列流：Java 对象的序列化和反序列化"}],["meta",{"property":"og:description","content":"本文详细介绍了 Java 序列流在对象序列化和反序列化中的重要作用，阐述了其如何有效地将 Java 对象持久化存储和恢复。同时，文章还提供了序列流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解 Java 序列流以及其在 Java 编程中的关键地位，提高数据持久化和恢复的效率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java IO"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 序列流：Java 对象的序列化和反序列化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"01、ObjectOutputStream","slug":"_01、objectoutputstream","link":"#_01、objectoutputstream","children":[]},{"level":3,"title":"02、ObjectInputStream","slug":"_02、objectinputstream","link":"#_02、objectinputstream","children":[]},{"level":3,"title":"03、Kryo","slug":"_03、kryo","link":"#_03、kryo","children":[]},{"level":3,"title":"04、小结","slug":"_04、小结","link":"#_04、小结","children":[]}],"git":{"createdTime":1661412910000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":5},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":4}]},"readingTime":{"minutes":5.64,"words":1692},"filePathRelative":"io/serialize.md","localizedDate":"2022年8月25日","excerpt":"<h1> 7.8 序列流(序列化和反序列化)</h1>\\n<p>Java 的序列流（ObjectInputStream 和 ObjectOutputStream）是一种可以将 Java 对象序列化和反序列化的流。</p>\\n<p>序列化是指将一个对象转换为一个字节序列（包含<code>对象的数据</code>、<code>对象的类型</code>和<code>对象中存储的属性</code>等信息），以便在网络上传输或保存到文件中，或者在程序之间传递。在 Java 中，序列化通过实现 java.io.Serializable 接口来实现，只有实现了 <a href=\\"https://javabetter.cn/io/Serializbale.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Serializable 接口</a>的对象才能被序列化。</p>"}');export{e as data};
