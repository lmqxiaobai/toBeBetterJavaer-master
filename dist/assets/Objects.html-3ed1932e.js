const e=JSON.parse('{"key":"v-e77b8fda","path":"/common-tool/Objects.html","title":"Objects：专为操作Java对象而生的工具类","lang":"zh-CN","frontmatter":{"title":"Objects：专为操作Java对象而生的工具类","shortTitle":"Objects工具类","category":["Java核心"],"tag":["常用工具类"],"description":"本文详细介绍了Java中的Objects工具类，阐述了它在处理Java对象操作中的实际应用和优势。通过具体的代码示例，展示了如何使用Objects类解决对象比较、判空、生成hashCode等常见问题。学习Objects工具类的技巧，让您在Java编程中更加高效地处理对象操作，提高开发效率。","head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,二哥的Java进阶之路,Java进阶之路,Java入门,教程,java,Objects,java objects"}],["meta",{"property":"og:url","content":"https://javabetter.cn/common-tool/Objects.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Objects：专为操作Java对象而生的工具类"}],["meta",{"property":"og:description","content":"本文详细介绍了Java中的Objects工具类，阐述了它在处理Java对象操作中的实际应用和优势。通过具体的代码示例，展示了如何使用Objects类解决对象比较、判空、生成hashCode等常见问题。学习Objects工具类的技巧，让您在Java编程中更加高效地处理对象操作，提高开发效率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"常用工具类"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Objects：专为操作Java对象而生的工具类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"对象判空","slug":"对象判空","link":"#对象判空","children":[]},{"level":3,"title":"对象为空时抛异常","slug":"对象为空时抛异常","link":"#对象为空时抛异常","children":[]},{"level":3,"title":"判断两个对象是否相等","slug":"判断两个对象是否相等","link":"#判断两个对象是否相等","children":[]},{"level":3,"title":"获取对象的hashCode","slug":"获取对象的hashcode","link":"#获取对象的hashcode","children":[]},{"level":3,"title":"比较两个对象","slug":"比较两个对象","link":"#比较两个对象","children":[]},{"level":3,"title":"比较两个数组","slug":"比较两个数组","link":"#比较两个数组","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1661849678000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":5},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":3}]},"readingTime":{"minutes":5.08,"words":1524},"filePathRelative":"common-tool/Objects.md","localizedDate":"2022年8月30日","excerpt":"<h1> 9.4 Objects工具类</h1>\\n<p>Java 的 Objects 类是一个实用工具类，包含了一系列静态方法，用于处理对象。它位于 java.util 包中，自 Java 7 引入。Objects 类的主要目的是降低代码中的<a href=\\"https://javabetter.cn/exception/npe.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">空指针异常</a> (NullPointerException) 风险，同时提供一些非常实用的方法供我们使用。</p>\\n<h3> 对象判空</h3>\\n<p>在 Java 中，万物皆对象，对象的判空可以说无处不在。Objects 的 <code>isNull</code> 方法用于判断对象是否为空，而 <code>nonNull</code> 方法判断对象是否不为空。例如：</p>"}');export{e as data};
