const e=JSON.parse('{"key":"v-0d07ca65","path":"/jvm/asm.html","title":"史上最通俗易懂的ASM教程","lang":"zh-CN","frontmatter":{"title":"史上最通俗易懂的ASM教程","shortTitle":"史上最通俗易懂的ASM教程","category":["Java核心"],"tag":["Java虚拟机"],"description":"二哥的Java进阶之路，小白的零基础Java教程，从入门到进阶，史上最通俗易懂的ASM教程","head":[["meta",{"name":"keywords","content":"Java,JavaSE,教程,二哥的Java进阶之路,jvm,Java虚拟机,asm"}],["meta",{"property":"og:url","content":"https://javabetter.cn/jvm/asm.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"史上最通俗易懂的ASM教程"}],["meta",{"property":"og:description","content":"二哥的Java进阶之路，小白的零基础Java教程，从入门到进阶，史上最通俗易懂的ASM教程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java虚拟机"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"史上最通俗易懂的ASM教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"一勺思想","slug":"一勺思想","link":"#一勺思想","children":[]},{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"class字节码","slug":"class字节码","link":"#class字节码","children":[]},{"level":2,"title":"JVM基于栈的设计模式","slug":"jvm基于栈的设计模式","link":"#jvm基于栈的设计模式","children":[{"level":3,"title":"局部变量表","slug":"局部变量表","link":"#局部变量表","children":[]},{"level":3,"title":"操作数栈","slug":"操作数栈","link":"#操作数栈","children":[]},{"level":3,"title":"JVM指令","slug":"jvm指令","link":"#jvm指令","children":[]}]},{"level":2,"title":"ASM操作","slug":"asm操作","link":"#asm操作","children":[]},{"level":2,"title":"ASM API","slug":"asm-api","link":"#asm-api","children":[]},{"level":2,"title":"MethodVisitor方法解析","slug":"methodvisitor方法解析","link":"#methodvisitor方法解析","children":[{"level":3,"title":"ASM 使用Demo","slug":"asm-使用demo","link":"#asm-使用demo","children":[]}]}],"git":{"createdTime":1648354033000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":8.01,"words":2404},"filePathRelative":"jvm/asm.md","localizedDate":"2022年3月27日","excerpt":"<h1> 史上最通俗易懂的ASM教程</h1>\\n<h2> 一勺思想</h2>\\n<p>We are all in the gutter, but some of us are looking at the stars. （我们都生活在阴沟里，但仍有人仰望星空 ）- 王尔德 《温德米尔夫人的扇子》</p>\\n<p>举世混浊我独清，众人皆醉我独醒 - 屈原 《楚辞》</p>\\n<h2> 前言</h2>\\n<p>ASM是一种通用Java字节码操作和分析框架。它可以用于修改现有的class文件或动态生成class文件。</p>\\n<blockquote>\\n<p>**ASM&nbsp;**is an all purpose Java bytecode manipulation and analysis framework. It can be used to modify existing classes or to dynamically generate classes, directly in binary form. ASM provides some common bytecode transformations and analysis algorithms from which custom complex transformations and code analysis tools can be built. ASM offers similar functionality as other Java bytecode frameworks, but is focused on<a href=\\"https://asm.ow2.io/performance.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">performance</a>. Because it was designed and implemented to be as small and as fast as possible, it is well suited for use in dynamic systems (but can of course be used in a static way too, e.g. in compilers).</p>\\n</blockquote>"}');export{e as data};
