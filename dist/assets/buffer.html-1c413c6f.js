const e=JSON.parse('{"key":"v-711b0069","path":"/io/buffer.html","title":"Java 缓冲流：Java IO 的读写效率有了质的飞升","lang":"zh-CN","frontmatter":{"title":"Java 缓冲流：Java IO 的读写效率有了质的飞升","shortTitle":"缓冲流","category":["Java核心"],"tag":["Java IO"],"description":"本文详细介绍了字符流在 Java IO 操作中的重要作用，特别关注 Reader 和 Writer 类及其子类的功能与用途。同时，文章还提供了字符流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解字符流以及 Reader 和 Writer 在 Java 编程中的关键地位，提高文本操作效率。","head":[["meta",{"name":"keywords","content":"Java,IO,缓冲流,Buffered,BufferedInputStream,BufferedOutputStream,BufferedReader,BufferedWriter,java 缓冲流,java buffer"}],["meta",{"property":"og:url","content":"https://javabetter.cn/io/buffer.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Java 缓冲流：Java IO 的读写效率有了质的飞升"}],["meta",{"property":"og:description","content":"本文详细介绍了字符流在 Java IO 操作中的重要作用，特别关注 Reader 和 Writer 类及其子类的功能与用途。同时，文章还提供了字符流的实际应用示例和常用方法。阅读本文，将帮助您更深入地了解字符流以及 Reader 和 Writer 在 Java 编程中的关键地位，提高文本操作效率。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java IO"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 缓冲流：Java IO 的读写效率有了质的飞升\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"01、字节缓冲流","slug":"_01、字节缓冲流","link":"#_01、字节缓冲流","children":[]},{"level":3,"title":"02、字符缓冲流","slug":"_02、字符缓冲流","link":"#_02、字符缓冲流","children":[]},{"level":3,"title":"03、字符缓冲流练习","slug":"_03、字符缓冲流练习","link":"#_03、字符缓冲流练习","children":[]}],"git":{"createdTime":1661242206000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":5},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":5}]},"readingTime":{"minutes":13.67,"words":4100},"filePathRelative":"io/buffer.md","localizedDate":"2022年8月23日","excerpt":"<h1> 7.5 缓冲流</h1>\\n<p>Java 的缓冲流是对字节流和字符流的一种封装，通过在内存中开辟缓冲区来提高 I/O 操作的效率。Java 通过 BufferedInputStream 和 BufferedOutputStream 来实现字节流的缓冲，通过 BufferedReader 和 BufferedWriter 来实现字符流的缓冲。</p>\\n<p>缓冲流的工作原理是将数据先写入缓冲区中，当缓冲区满时再一次性写入文件或输出流，或者当缓冲区为空时一次性从文件或输入流中读取一定量的数据。这样可以减少系统的 I/O 操作次数，提高系统的 I/O 效率，从而提高程序的运行效率。</p>"}');export{e as data};
