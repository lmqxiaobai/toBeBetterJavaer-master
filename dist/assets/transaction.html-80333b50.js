const t=JSON.parse('{"key":"v-33b6789c","path":"/springboot/transaction.html","title":"Spring Boot 如何开启事务支持？","lang":"zh-CN","frontmatter":{"category":["Java企业级开发"],"tag":["Spring Boot"],"title":"Spring Boot 如何开启事务支持？","description":"关于事务 事务在逻辑上是一组操作，要么执行，要不都不执行。主要是针对数据库而言的，比如说 MySQL。 只要记住这一点，理解事务就很容易了。在 Java 中，我们通常要在业务里面处理多个事件，比如说我们有一个保存文章的方法，它除了要保存文章本身之外，还要保存文章对应的标签，标签和文章不在同一个表里，但会通过在文章表里（posts）保存标签主键（tag_id）来关联标签表（tags）： public void savePosts(PostsParam postsParam) { // 保存文章 save(posts); // 处理标签 insertOrUpdateTag(postsParam, posts); }","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/springboot/transaction.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"Spring Boot 如何开启事务支持？"}],["meta",{"property":"og:description","content":"关于事务 事务在逻辑上是一组操作，要么执行，要不都不执行。主要是针对数据库而言的，比如说 MySQL。 只要记住这一点，理解事务就很容易了。在 Java 中，我们通常要在业务里面处理多个事件，比如说我们有一个保存文章的方法，它除了要保存文章本身之外，还要保存文章对应的标签，标签和文章不在同一个表里，但会通过在文章表里（posts）保存标签主键（tag_id）来关联标签表（tags）： public void savePosts(PostsParam postsParam) { // 保存文章 save(posts); // 处理标签 insertOrUpdateTag(postsParam, posts); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-25T05:40:29.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:modified_time","content":"2023-02-25T05:40:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot 如何开启事务支持？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-25T05:40:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"关于事务","slug":"关于事务","link":"#关于事务","children":[]},{"level":2,"title":"关于 Spring 对事务的支持","slug":"关于-spring-对事务的支持","link":"#关于-spring-对事务的支持","children":[]},{"level":2,"title":"事务管理模型","slug":"事务管理模型","link":"#事务管理模型","children":[{"level":3,"title":"事务传播行为","slug":"事务传播行为","link":"#事务传播行为","children":[]},{"level":3,"title":"事务隔离级别","slug":"事务隔离级别","link":"#事务隔离级别","children":[]},{"level":3,"title":"事务的超时时间","slug":"事务的超时时间","link":"#事务的超时时间","children":[]},{"level":3,"title":"事务的只读属性","slug":"事务的只读属性","link":"#事务的只读属性","children":[]},{"level":3,"title":"事务的回滚策略","slug":"事务的回滚策略","link":"#事务的回滚策略","children":[]}]},{"level":2,"title":"关于 Spring Boot 对事务的支持","slug":"关于-spring-boot-对事务的支持","link":"#关于-spring-boot-对事务的支持","children":[{"level":3,"title":"@Transactional 的作用范围","slug":"transactional-的作用范围","link":"#transactional-的作用范围","children":[]},{"level":3,"title":"@Transactional 的常用配置参数","slug":"transactional-的常用配置参数","link":"#transactional-的常用配置参数","children":[]},{"level":3,"title":"@Transactional 的使用注意事项总结","slug":"transactional-的使用注意事项总结","link":"#transactional-的使用注意事项总结","children":[]}]},{"level":2,"title":"测试事务是否起效","slug":"测试事务是否起效","link":"#测试事务是否起效","children":[]}],"git":{"createdTime":1653092056000,"updatedTime":1677303629000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":6}]},"readingTime":{"minutes":13.64,"words":4093},"filePathRelative":"springboot/transaction.md","localizedDate":"2022年5月21日","excerpt":"<h2> 关于事务</h2>\\n<p>事务在逻辑上是一组操作，<strong>要么执行，要不都不执行</strong>。主要是针对数据库而言的，比如说 MySQL。</p>\\n<p>只要记住这一点，理解事务就很容易了。在 Java 中，我们通常要在业务里面处理多个事件，比如说我们有一个保存文章的方法，它除了要保存文章本身之外，还要保存文章对应的标签，标签和文章不在同一个表里，但会通过在文章表里（posts）保存标签主键（tag_id）来关联标签表（tags）：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">savePosts</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">PostsParam</span> postsParam<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 保存文章</span>\\n  <span class=\\"token function\\">save</span><span class=\\"token punctuation\\">(</span>posts<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 处理标签</span>\\n  <span class=\\"token function\\">insertOrUpdateTag</span><span class=\\"token punctuation\\">(</span>postsParam<span class=\\"token punctuation\\">,</span> posts<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
