const e=JSON.parse('{"key":"v-109bb8a4","path":"/thread/ConcurrentLinkedQueue.html","title":"吊打Java并发面试官之ConcurrentLinkedQueue","lang":"zh-CN","frontmatter":{"title":"吊打Java并发面试官之ConcurrentLinkedQueue","shortTitle":"ConcurrentLinkedQueue","description":"吊打Java并发面试官之ConcurrentLinkedQueue","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ConcurrentLinkedQueue"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/ConcurrentLinkedQueue.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"吊打Java并发面试官之ConcurrentLinkedQueue"}],["meta",{"property":"og:description","content":"吊打Java并发面试官之ConcurrentLinkedQueue"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"吊打Java并发面试官之ConcurrentLinkedQueue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"Node","slug":"node","link":"#node","children":[{"level":3,"title":"操作Node的几个CAS操作","slug":"操作node的几个cas操作","link":"#操作node的几个cas操作","children":[]}]},{"level":2,"title":"offer方法","slug":"offer方法","link":"#offer方法","children":[{"level":3,"title":"单线程执行角度分析：","slug":"单线程执行角度分析","link":"#单线程执行角度分析","children":[]},{"level":3,"title":"多线程执行角度分析","slug":"多线程执行角度分析","link":"#多线程执行角度分析","children":[]}]},{"level":2,"title":"poll方法","slug":"poll方法","link":"#poll方法","children":[{"level":3,"title":"定位删除的队头节点","slug":"定位删除的队头节点","link":"#定位删除的队头节点","children":[]},{"level":3,"title":"多线程执行情况分析：","slug":"多线程执行情况分析","link":"#多线程执行情况分析","children":[]}]},{"level":2,"title":"offer方法中部分线程offer部分线程poll","slug":"offer方法中部分线程offer部分线程poll","link":"#offer方法中部分线程offer部分线程poll","children":[]},{"level":2,"title":"HOPS的设计","slug":"hops的设计","link":"#hops的设计","children":[]}],"git":{"createdTime":1648037338000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":19.18,"words":5754},"filePathRelative":"thread/ConcurrentLinkedQueue.md","localizedDate":"2022年3月23日","excerpt":"<p>队列是我们常用的一种数据结构，为了解决线程安全的问题，Doug Lea大师为我们准备了ConcurrentLinkedQueue这个线程安全的队列。从类名就可以看的出来实现队列的数据结构是链式。</p>\\n<h2> Node</h2>\\n<p>要想先学习ConcurrentLinkedQueue自然而然得先从它的节点类看起，明白它的底层数据结构。Node类的源码为：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Node</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">E</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">volatile</span> <span class=\\"token class-name\\">E</span> item<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">volatile</span> <span class=\\"token class-name\\">Node</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">E</span><span class=\\"token punctuation\\">&gt;</span></span> next<span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
