const t=JSON.parse('{"key":"v-dfddf504","path":"/springboot/validator.html","title":"SpringBoot中处理校验逻辑的两种方式：Hibernate Validator+全局异常处理","lang":"zh-CN","frontmatter":{"category":["Java企业级开发"],"tag":["Spring Boot"],"title":"SpringBoot中处理校验逻辑的两种方式：Hibernate Validator+全局异常处理","shortTitle":"SpringBoot中如何处理校验逻辑","description":"最近正在开发一个知识库学习网站编程喵🐱，需要对请求参数进行校验，比如说非空啊、长度限制啊等等，可选的解决方案有两种： 一种是用 Hibernate Validator 来处理 一种是用全局异常来处理 两种方式，我们一一来实践体验一下。 一、Hibernate Validator Spring Boot 已经内置了 Hibernate Validator 校验框架，这个可以通过 Spring Boot 官网查看和确认。 第一步，进入 Spring Boot 官网，点击 learn 这个面板，点击参考文档。","head":[["meta",{"property":"og:url","content":"https://javabetter.cn/springboot/validator.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"SpringBoot中处理校验逻辑的两种方式：Hibernate Validator+全局异常处理"}],["meta",{"property":"og:description","content":"最近正在开发一个知识库学习网站编程喵🐱，需要对请求参数进行校验，比如说非空啊、长度限制啊等等，可选的解决方案有两种： 一种是用 Hibernate Validator 来处理 一种是用全局异常来处理 两种方式，我们一一来实践体验一下。 一、Hibernate Validator Spring Boot 已经内置了 Hibernate Validator 校验框架，这个可以通过 Spring Boot 官网查看和确认。 第一步，进入 Spring Boot 官网，点击 learn 这个面板，点击参考文档。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-26T14:16:41.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:modified_time","content":"2022-12-26T14:16:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot中处理校验逻辑的两种方式：Hibernate Validator+全局异常处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-12-26T14:16:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"一、Hibernate Validator","slug":"一、hibernate-validator","link":"#一、hibernate-validator","children":[]},{"level":3,"title":"二、全局异常处理","slug":"二、全局异常处理","link":"#二、全局异常处理","children":[]},{"level":3,"title":"三、总结","slug":"三、总结","link":"#三、总结","children":[]}],"git":{"createdTime":1655189175000,"updatedTime":1672064201000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":2},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":1}]},"readingTime":{"minutes":6.08,"words":1825},"filePathRelative":"springboot/validator.md","localizedDate":"2022年6月14日","excerpt":"<p>最近正在开发一个知识库学习网站编程喵🐱，需要对请求参数进行校验，比如说非空啊、长度限制啊等等，可选的解决方案有两种：</p>\\n<ul>\\n<li>一种是用 Hibernate Validator 来处理</li>\\n<li>一种是用全局异常来处理</li>\\n</ul>\\n<p>两种方式，我们一一来实践体验一下。</p>\\n<h3> 一、Hibernate Validator</h3>\\n<p>Spring Boot 已经内置了 Hibernate Validator 校验框架，这个可以通过 Spring Boot 官网查看和确认。</p>\\n<p>第一步，进入 Spring Boot 官网，点击 learn 这个面板，点击参考文档。</p>","autoDesc":true}');export{t as data};
