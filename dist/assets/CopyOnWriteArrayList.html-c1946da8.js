const t=JSON.parse('{"key":"v-396740a1","path":"/thread/CopyOnWriteArrayList.html","title":"吊打Java并发面试官之CopyOnWriteArrayList","lang":"zh-CN","frontmatter":{"title":"吊打Java并发面试官之CopyOnWriteArrayList","shortTitle":"CopyOnWriteArrayList","description":"吊打Java并发面试官之CopyOnWriteArrayList","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,CopyOnWriteArrayList"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/CopyOnWriteArrayList.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"吊打Java并发面试官之CopyOnWriteArrayList"}],["meta",{"property":"og:description","content":"吊打Java并发面试官之CopyOnWriteArrayList"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"吊打Java并发面试官之CopyOnWriteArrayList\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"CopyOnWriteArrayList的简介","slug":"copyonwritearraylist的简介","link":"#copyonwritearraylist的简介","children":[]},{"level":2,"title":"COW的设计思想","slug":"cow的设计思想","link":"#cow的设计思想","children":[]},{"level":2,"title":"CopyOnWriteArrayList的实现原理","slug":"copyonwritearraylist的实现原理","link":"#copyonwritearraylist的实现原理","children":[{"level":3,"title":"get方法实现原理","slug":"get方法实现原理","link":"#get方法实现原理","children":[]},{"level":3,"title":"add方法实现原理","slug":"add方法实现原理","link":"#add方法实现原理","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[{"level":3,"title":"COW  vs 读写锁","slug":"cow-vs-读写锁","link":"#cow-vs-读写锁","children":[]},{"level":3,"title":"COW的缺点","slug":"cow的缺点","link":"#cow的缺点","children":[]}]}],"git":{"createdTime":1648037338000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":9.05,"words":2714},"filePathRelative":"thread/CopyOnWriteArrayList.md","localizedDate":"2022年3月23日","excerpt":"<h2> CopyOnWriteArrayList的简介</h2>\\n<p>java学习者都清楚ArrayList并不是线程安全的，在读线程在读取ArrayList的时候如果有写线程在写数据的时候，基于fast-fail机制，会抛出<strong>ConcurrentModificationException</strong>异常，也就是说ArrayList并不是一个线程安全的容器，当然您可以用Vector,或者使用Collections的静态方法将ArrayList包装成一个线程安全的类，但是这些方式都是采用java关键字synchronzied对方法进行修饰，利用独占式锁来保证线程安全的。但是，由于独占式锁在同一时刻只有一个线程能够获取到对象监视器，很显然这种方式效率并不是太高。</p>"}');export{t as data};
