import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as t,a as e,d,b as a,e as r}from"./app-1c5b5ce3.js";const o={},s=r(`<blockquote><p>Nginx是一款非常流行的Web服务器，在Github上已有<code>16K+Star</code>，我们经常用它来做静态资源托管或反向代理。最近发现了一款全新的Web服务器<code>Caddy</code>，Star数超越Nginx，标星<code>38K+Star</code>。试用了一下<code>Caddy</code>，发现它使用起来比Nginx优雅多了，功能也很强大，推荐给大家！</p></blockquote><h2 id="caddy简介" tabindex="-1"><a class="header-anchor" href="#caddy简介" aria-hidden="true">#</a> Caddy简介</h2><p>Caddy是一款功能强大，扩展性高的Web服务器，目前在Github上已有<code>38K+Star</code>。Caddy采用Go语言编写，可用于静态资源托管和反向代理。</p><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-9934a57f-8350-4ea0-b3c9-d42e5d032c8f.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Caddy具有如下主要特性：</p><ul><li>对比Nginx复杂的配置，其独创的<code>Caddyfile</code>配置非常简单；</li><li>可以通过其提供的<code>Admin API</code>实现动态修改配置；</li><li>默认支持自动化HTTPS配置，能自动申请HTTPS证书并进行配置；</li><li>能够扩展到数以万计的站点；</li><li>可以在任意地方执行，没有额外的依赖；</li><li>采用Go语言编写，内存安全更有保证。</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><blockquote><p>首先我们直接在CentOS 8上安装Caddy，使用DNF工具安装无疑是最简单的，Docker安装方式之后也会介绍。</p></blockquote><ul><li>使用如下命令通过DNF工具安装Caddy，安装成功后Caddy会被注册成系统服务；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dnf install &#39;dnf-command(copr)&#39;
dnf copr enable @caddy/caddy
dnf install caddy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用<code>systemctl status caddy</code>查看Caddy的状态，可以发现Caddy已被注册为系统服务，但是还没开启。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-37c16043-2774-4571-8e96-940c09d664a1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><blockquote><p>下面我们体验下Caddy的基本使用，对于Web服务器来说都是常用的操作，你准能用的上！</p></blockquote><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h3><blockquote><p>首先我们来个Caddy的入门使用，让Caddy运行在<code>2015</code>端口上并返回<code>Hello, world!</code>。</p></blockquote><ul><li>直接使用<code>caddy</code>命令将输出Caddy的常用命令，基本看介绍就知道如何使用了，标出来的是常用命令；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-814f1724-07d8-4b0e-947c-d2be4623ff00.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用<code>caddy start</code>命令可以让Caddy服务在后台运行；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-91091246-afc8-4baa-ac94-9c71239fc7d7.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Caddy默认使用JSON格式的配置文件，但由于JOSN格式配置书写比较麻烦，又提供了<code>Caddyfile</code>这种更加简洁的配置形式，使用如下命令能自动把<code>Caddyfile</code>转化为JSON配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>caddy adapter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>我们可以先创建一个名称为<code>Caddyfile</code>的文件，文件内容如下，然后使用<code>caddy adapter</code>将它转换为JSON配置，再使用<code>caddy reload</code>使配置生效，该配置将监听<code>2015</code>端口，并返回<code>Hello, world!</code>；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:2015

respond &quot;Hello, world!&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后我们使用curl命令访问<code>localhost:2015</code>，将返回指定的信息；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-067cef19-b4fa-465d-a78e-b0aeda1fdfe8.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>当然我们还可以使用Caddy提供的<code>Admin API</code>来查看配置信息，使用如下命令即可；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl localhost:2019/config/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>当前JSON配置如下，如果你直接使用JSON配置的话需要书写如下配置，使用<code>Caddyfile</code>确实方便很多！</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
 &quot;apps&quot;: {
  &quot;http&quot;: {
   &quot;servers&quot;: {
    &quot;srv0&quot;: {
     &quot;listen&quot;: [&quot;:2015&quot;],
     &quot;routes&quot;: [{
      &quot;handle&quot;: [{
       &quot;body&quot;: &quot;Hello, world!&quot;,
       &quot;handler&quot;: &quot;static_response&quot;
      }]
     }]
    }
   }
  }
 }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="caddyfile基本语法" tabindex="-1"><a class="header-anchor" href="#caddyfile基本语法" aria-hidden="true">#</a> <code>Caddyfile</code>基本语法</h3><ul><li>下面案例将使用<code>Caddyfile</code>来进行配置，我们有必要了解下它的语法，<code>Caddyfile</code>的具体语法规则如下。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-7164a091-ca8e-494b-9036-578d86bb5ebd.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>介绍下上图中的关键字，有助于理解。</li></ul><table><thead><tr><th>关键字</th><th>解释</th><th>使用</th></tr></thead><tbody><tr><td>Global options block</td><td>服务器全局配置</td><td>可用于配置是否启用HTTPS和Admin API等</td></tr><tr><td>Snippet</td><td>可以复用的配置片段</td><td>定义好后认可以通过<code>import</code>关键字引用</td></tr><tr><td>Site Block</td><td>单个网站配置</td><td>通过<code>file_server</code>可以配置静态代理，通过<code>reverse_proxy</code>可以配置动态代理</td></tr><tr><td>Matcher definition</td><td>匹配定义</td><td>默认情况下指令会产生全局影响，通过它可以指定影响范围</td></tr><tr><td>Comment</td><td>注释</td><td>使用<code>#</code>符号开头</td></tr><tr><td>Site address</td><td>网站地址</td><td>默认使用HTTPS，如需开启HTTP，需要指定<code>http://</code>开头</td></tr><tr><td>Directive</td><td>指令</td><td>指令赋予了Caddy强大的功能</td></tr></tbody></table><h3 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h3><blockquote><p>反向代理就是当请求访问你的代理服务器时，代理服务器会对你的请求进行转发，可以转发到静态的资源路径上去，也可以转发到动态的服务接口上去。下面我们以对域名进行代理为例，来讲讲如何进行静态代理和动态代理。</p></blockquote><h4 id="静态代理" tabindex="-1"><a class="header-anchor" href="#静态代理" aria-hidden="true">#</a> 静态代理</h4><blockquote><p>静态代理就是将请求代理到不同的静态资源路径上去，这里我们将对<code>docs.macrozheng.com</code>的请求代理到我的文档项目中，对<code>mall.macrozheng.com</code>的请求代理到mall的前端项目中。</p></blockquote><ul><li>首先我们修改下本机的host文件：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>192.168.3.106 docs.macrozheng.com
192.168.3.106 mall.macrozheng.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后将我们的文档项目和mall前端项目上传到Caddy的html目录中去，并进行解压操作：</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-c3daf1e4-465c-4438-90f0-3ff43ea5f894.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>修改<code>Caddyfile</code>文件，使用如下配置，修改完成后使用<code>caddy reload</code>命令刷新配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://docs.macrozheng.com {
        root * /mydata/caddy/html/docs
        file_server browse
}

http://mall.macrozheng.com {
        root * /mydata/caddy/html/mall
        file_server browse
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果你的<code>Caddyfile</code>文件格式不太合格的话，会出现如下警告，直接使用<code>caddy fmt --overwrite</code>格式化并重写配置即可解决；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-c605a767-d9cf-4962-9e58-26b1acde3d8b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>通过<code>docs.macrozheng.com</code>即可访问部署好的文档项目了：</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-13db54d4-c25b-4a9f-a303-93552dfa4751.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>通过<code>mall.macrozheng.com</code>即可访问到部署好的前端项目了。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-0af0e997-4135-4dbe-9255-4c11fda173c7.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="动态代理" tabindex="-1"><a class="header-anchor" href="#动态代理" aria-hidden="true">#</a> 动态代理</h4><blockquote><p>动态代理就是把代理服务器的请求转发到另一个服务上去，这里我们将把对<code>api.macrozheng.com</code>的请求代理到演示环境的API服务上去。</p></blockquote><ul><li>首先我们修改下本机的host文件，添加如下规则：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>192.168.3.106 api.macrozheng.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改<code>Caddyfile</code>文件，使用如下配置，修改完成后使用<code>caddy reload</code>命令刷新配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://api.macrozheng.com {
        reverse_proxy http://admin-api.macrozheng.com
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>之后通过<code>api.macrozheng.com/swagger-ui.html</code>即可访问到<code>mall-admin</code>的API文档页面了。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-64a2a842-ce0b-49e3-a901-69583dbba655.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="文件压缩" tabindex="-1"><a class="header-anchor" href="#文件压缩" aria-hidden="true">#</a> 文件压缩</h3><blockquote><p>如果我们的服务器带宽比较低，网站访问速度会很慢，这时我们可以通过让Caddy开启Gzip压缩来提高网站的访问速度。这里我们以mall的前端项目为例来演示下它的提速效果。</p></blockquote><ul><li>我们需要修改<code>Caddyfile</code>文件，使用<code>encode</code>指令开启Gzip压缩，修改完成后使用<code>caddy reload</code>命令刷新配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://mall.macrozheng.com {
        root * /mydata/caddy/html/mall
        encode {
            gzip
        }
        file_server browse
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>有个比较大的JS文件压缩前是<code>1.7M</code>；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-ed4d3a63-0bdb-4330-927d-2fd496ecc21b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>压缩后为<code>544K</code>，访问速度也有很大提示；</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-452cb1c0-4298-4834-a5c2-a15db28d1a62.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>另外我们可以看下响应信息，如果有<code>Content-Encoding: gzip</code>这个响应头表明Gzip压缩已经启用了。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-df92216c-66c4-4d8c-8139-bcf6f2ce43ca.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="地址重写" tabindex="-1"><a class="header-anchor" href="#地址重写" aria-hidden="true">#</a> 地址重写</h3><blockquote><p>有的时候我们的网站更换了域名，但还有用户在使用老的域名访问，这时可以通过Caddy的地址重写功能来让用户跳转到新的域名进行访问。</p></blockquote><ul><li>我们需要修改<code>Caddyfile</code>文件，使用<code>redir</code>指令重写地址，修改完成后使用<code>caddy reload</code>命令刷新配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://docs.macrozheng.com {
        redir http://www.macrozheng.com
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此时访问旧域名<code>docs.macrozheng.com</code>会直接跳转到<code>www.macrozheng.com</code>去。</li></ul><h3 id="按目录划分" tabindex="-1"><a class="header-anchor" href="#按目录划分" aria-hidden="true">#</a> 按目录划分</h3><blockquote><p>有时候我们需要使用同一个域名来访问不同的前端项目，这时候就需要通过子目录来区分前端项目了。</p></blockquote><ul><li>比如说我们需要按以下路径来访问各个前端项目；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>www.macrozheng.com #访问文档项目
www.macrozheng.com/admin #访问后台项目
www.macrozheng.com/app #访问移动端项目
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>我们需要修改<code>Caddyfile</code>文件，使用<code>route</code>指令定义路由，修改完成后使用<code>caddy reload</code>命令刷新配置。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://www.macrozheng.com {
        route /admin/* {
                uri strip_prefix /admin
                file_server {
                        root /mydata/caddy/html/admin
                }
        }
        route /app/* {
                uri strip_prefix /app
                file_server {
                        root /mydata/caddy/html/app
                }
        }
        file_server * {
                root /mydata/caddy/html/www
        }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="https" tabindex="-1"><a class="header-anchor" href="#https" aria-hidden="true">#</a> HTTPS</h3><blockquote><p>Caddy能自动支持HTTPS，无需手动配置证书，这就是之前我们在配置域名时需要使用<code>http://</code>开头的原因，要想使用Caddy默认的HTTPS功能，按如下步骤操作即可。</p></blockquote><ul><li>首先我们需要修改域名的DNS解析，直接在购买域名的网站上设置即可，这里以<code>docs.macrozheng.com</code>域名为例；</li><li>之后使用如下命令验证DNS解析记录是否正确，注意配置的服务器的<code>80</code>和<code>443</code>端口需要在外网能正常访问；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl &quot;https://cloudflare-dns.com/dns-query?name=docs.macrozheng.com&amp;type=A&quot; \\
  -H &quot;accept: application/dns-json&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改<code>Caddyfile</code>配置文件，进行如下配置；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docs.macrozheng.com {
        root * /mydata/caddy/html/docs
        file_server browse
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后使用<code>caddy run</code>命令启动Caddy服务器即可，是不是非常方便！</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>caddy run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker支持" tabindex="-1"><a class="header-anchor" href="#docker支持" aria-hidden="true">#</a> Docker支持</h3><blockquote><p>当然Caddy也是支持使用Docker进行安装使用的，其使用和直接在CentOS上安装基本一致。</p></blockquote><ul><li>首先使用如下命令下载Caddy的Docker镜像；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker pull caddy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>然后在<code>/mydata/caddy/</code>目录下创建<code>Caddyfile</code>配置文件，文件内容如下；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://192.168.3.105:80

respond &quot;Hello, world!&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>之后使用如下命令启动caddy服务，这里将宿主机上的<code>Caddyfile</code>配置文件、Caddy的数据目录和网站目录挂载到了容器中；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 80:80 -p 443:443 --name caddy \\
    -v /mydata/caddy/Caddyfile:/etc/caddy/Caddyfile \\
    -v /mydata/caddy/data:/data \\
    -v /mydata/caddy/html:/usr/share/caddy \\
    -d caddy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>之后使用<code>docker exec</code>进入caddy容器内部执行命令；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec -it caddy /bin/sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>输入Caddy命令即可操作，之后的操作就和我们直接在CentOS上安装一样了。</li></ul><figure><img src="https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-f589fa89-5940-43f2-a798-5b1523be9441.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>`,101),u={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247484240&idx=1&sn=d5db6374b07749639689383f61359e03&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"参考资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),d(" 参考资料")],-1),m={href:"https://github.com/caddyserver/caddy",target:"_blank",rel:"noopener noreferrer"},g={href:"https://caddyserver.com/",target:"_blank",rel:"noopener noreferrer"},v=e("hr",null,null,-1),h=e("p",null,[e("strong",null,"微信8.0将好友放开到了一万，小伙伴可以加我大号了，先到先得，再满就真没了")],-1),p=e("p",null,[e("strong",null,[d("扫描下方二维码即可加我微信啦，"),e("code",null,"2022，抱团取暖，一起牛逼。")])],-1),y=e("figure",null,[e("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-756f64b8-2db0-4bba-a813-a5f8f9f4ef79.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),f=e("h2",{id:"推荐阅读",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#推荐阅读","aria-hidden":"true"},"#"),d(" 推荐阅读")],-1),x={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498972&idx=1&sn=e0ac4aba19e2f89856bf93c1cbe1de3d&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},q={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498955&idx=1&sn=173323cfe634d6c543fe319a1046eaa8&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},w={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498925&idx=1&sn=39c5993faf8ee37b67cadee1345ccf3d&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498875&idx=1&sn=ee71f0dd7e40c97562e50adb44ae44c6&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},z={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498832&idx=1&sn=38549bb9e45831a263116555e63528a8&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},j={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247498682&idx=1&sn=431ac22705022bda2e5c127cf9dfe630&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},C={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247486684&idx=1&sn=807fd808adac8019eb2095ba088efe54&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},k={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247486362&idx=1&sn=fb6d71d328e8eee34976a86135dc6a7d&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},N=e("figure",null,[e("img",{src:"https://cdn.tobebetterjavaer.com/tobebetterjavaer/images/nice-article/weixin-chaoynginxhcxydwebfwqyqlgyy-92de163f-23a3-4194-b87b-83bb7fe9d203.jpg",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),S={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247499016&idx=1&sn=b4f12202e884dd02588cc701d0946ad3&chksm=fc2c4100cb5bc8167dcde2b0fb052e534ef335f2a8e6afd4034a5cfb8292d05423af0f35dcd0#rd",target:"_blank",rel:"noopener noreferrer"};function M(T,H){const i=c("ExternalLinkIcon");return l(),t("div",null,[s,e("p",null,[d("今天体验了一把Caddy，其强大的指令功能，让我们无需多余的配置即可实现各种功能，使用起来确实非常优雅！尤其是其能自动配置实现HTTPS，非常不错！Nginx能实现的功能Caddy基本都能实现，大家可以对比下之前写的"),e("a",u,[d("Nginx使用教程"),a(i)]),d(" ，你就会发现使用Caddy来实现有多么优雅！")]),b,e("ul",null,[e("li",null,[d("项目地址："),e("a",m,[d("https://github.com/caddyserver/caddy"),a(i)])]),e("li",null,[d("官方文档："),e("a",g,[d("https://caddyserver.com/"),a(i)])])]),v,h,p,y,f,e("ul",null,[e("li",null,[e("a",x,[d("你是外包，麻烦不要偷吃零食，注意素质..."),a(i)])]),e("li",null,[e("a",q,[d("xxl-job Vs ElasticJob，谁牛？"),a(i)])]),e("li",null,[e("a",w,[d("秒建炫酷的开源项目文档，这款神器用起来够优雅！"),a(i)])]),e("li",null,[e("a",_,[d("Objects.equals 有坑！！！"),a(i)])]),e("li",null,[e("a",z,[d("聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA..."),a(i)])]),e("li",null,[e("a",j,[d("神器 SpringDoc 横空出世！最适合 SpringBoot 的API文档工具来了！"),a(i)])]),e("li",null,[e("a",C,[d("40K+Star！Mall电商实战项目开源回忆录！"),a(i)])]),e("li",null,[e("a",k,[d("mall-swarm 微服务电商项目发布重大更新，打造Spring Cloud最佳实践！"),a(i)])])]),N,e("blockquote",null,[e("p",null,[d("转载链接："),e("a",S,[d("https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247499016&idx=1&sn=b4f12202e884dd02588cc701d0946ad3&chksm=fc2c4100cb5bc8167dcde2b0fb052e534ef335f2a8e6afd4034a5cfb8292d05423af0f35dcd0#rd"),a(i)]),d("，出处：macrozheng，整理：沉默王二")])])])}const U=n(o,[["render",M],["__file","chaoynginxhcxydwebfwqyqlgyy.html.vue"]]);export{U as default};
