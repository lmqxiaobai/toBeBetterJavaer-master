const e=JSON.parse('{"key":"v-2b2af198","path":"/oo/extends-bigsai.html","title":"深入理解 Java 继承","lang":"zh-CN","frontmatter":{"title":"深入理解 Java 继承","shortTitle":"Java继承","description":"二哥的Java进阶之路，小白的零基础Java教程，认真聊聊 Java的三大特征：继承","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java SE,Java基础,Java教程,二哥的Java进阶之路,Java进阶之路,Java入门,教程,继承,inheritance"}],["meta",{"property":"og:url","content":"https://javabetter.cn/oo/extends-bigsai.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"深入理解 Java 继承"}],["meta",{"property":"og:description","content":"二哥的Java进阶之路，小白的零基础Java教程，认真聊聊 Java的三大特征：继承"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"面向对象编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解 Java 继承\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"01、什么是继承","slug":"_01、什么是继承","link":"#_01、什么是继承","children":[]},{"level":3,"title":"02、为什么需要继承","slug":"_02、为什么需要继承","link":"#_02、为什么需要继承","children":[]},{"level":3,"title":"03、继承的分类","slug":"_03、继承的分类","link":"#_03、继承的分类","children":[]},{"level":3,"title":"04、如何实现继承","slug":"_04、如何实现继承","link":"#_04、如何实现继承","children":[]},{"level":3,"title":"05、继承的特点","slug":"_05、继承的特点","link":"#_05、继承的特点","children":[]},{"level":3,"title":"06、继承与修饰符","slug":"_06、继承与修饰符","link":"#_06、继承与修饰符","children":[]},{"level":3,"title":"07、Object 类和转型","slug":"_07、object-类和转型","link":"#_07、object-类和转型","children":[]},{"level":3,"title":"08、子父类初始化顺序","slug":"_08、子父类初始化顺序","link":"#_08、子父类初始化顺序","children":[]},{"level":3,"title":"09、结语","slug":"_09、结语","link":"#_09、结语","children":[]}],"git":{"createdTime":1660095699000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":10},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":3},{"name":"Sophy","email":"97727390+rechargeableSophy@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":22.13,"words":6639},"filePathRelative":"oo/extends-bigsai.md","localizedDate":"2022年8月10日","excerpt":"<h1> 5.14 Java封装继承多态</h1>\\n<p>“三妹，今天我们继续来学习 Java 的三大特征之一：继承，之前学习<a href=\\"https://javabetter.cn/oo/abstract.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">抽象类</a>的时候我们已经接触过这个概念，不过，我们今天我们来认真地聊一聊。”慢吞吞说完这句开篇词后，我对三妹做了一个打开 XMind 的手势提醒（其实就是瞎比划）。</p>\\n<p>“懂了，哥，我这就打开。”三妹一边说，一边打开了 XMind，开始正襟危坐了起来。</p>\\n<p>在谈 Java 面向对象的时候，不得不提到面向对象的三大特征：<a href=\\"https://javabetter.cn/oo/encapsulation.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">封装</a>、<strong>继承</strong>、<a href=\\"https://javabetter.cn/oo/polymorphism.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">多态</a>。三大特征紧密联系而又有区别，合理使用继承能大大减少重复代码，<strong>提高代码复用性。</strong></p>"}');export{e as data};
