const e=JSON.parse('{"key":"v-17464182","path":"/thread/ScheduledThreadPoolExecutor.html","title":"深入剖析Java计划任务ScheduledThreadPoolExecutor","lang":"zh-CN","frontmatter":{"title":"深入剖析Java计划任务ScheduledThreadPoolExecutor","shortTitle":"ScheduledThreadPoolExecutor","description":"深入剖析Java计划任务ScheduledThreadPoolExecutor","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ScheduledThreadPoolExecutor"}],["meta",{"property":"og:url","content":"https://javabetter.cn/thread/ScheduledThreadPoolExecutor.html"}],["meta",{"property":"og:site_name","content":"二哥的Java进阶之路"}],["meta",{"property":"og:title","content":"深入剖析Java计划任务ScheduledThreadPoolExecutor"}],["meta",{"property":"og:description","content":"深入剖析Java计划任务ScheduledThreadPoolExecutor"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T02:39:04.000Z"}],["meta",{"property":"article:author","content":"沉默王二"}],["meta",{"property":"article:tag","content":"Java并发编程"}],["meta",{"property":"article:modified_time","content":"2023-04-24T02:39:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入剖析Java计划任务ScheduledThreadPoolExecutor\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T02:39:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"沉默王二\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"使用案例","slug":"使用案例","link":"#使用案例","children":[]},{"level":2,"title":"类结构","slug":"类结构","link":"#类结构","children":[]},{"level":2,"title":"主要方法介绍","slug":"主要方法介绍","link":"#主要方法介绍","children":[{"level":3,"title":"schedule","slug":"schedule","link":"#schedule","children":[]},{"level":3,"title":"scheduleAtFixedRate","slug":"scheduleatfixedrate","link":"#scheduleatfixedrate","children":[]},{"level":3,"title":"scheduleWithFixedDelay","slug":"schedulewithfixeddelay","link":"#schedulewithfixeddelay","children":[]},{"level":3,"title":"delayedExecute","slug":"delayedexecute","link":"#delayedexecute","children":[]}]},{"level":2,"title":"DelayedWorkQueue","slug":"delayedworkqueue","link":"#delayedworkqueue","children":[{"level":3,"title":"take","slug":"take","link":"#take","children":[]},{"level":3,"title":"offer","slug":"offer","link":"#offer","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1648037338000,"updatedTime":1682303944000,"contributors":[{"name":"itwanger","email":"www.qing_gee@163.com","commits":9},{"name":"沉默王二","email":"www.qing_gee@163.com","commits":2}]},"readingTime":{"minutes":14.7,"words":4410},"filePathRelative":"thread/ScheduledThreadPoolExecutor.md","localizedDate":"2022年3月23日","excerpt":"<p>自JDK 1.5 开始，JDK提供了<code>ScheduledThreadPoolExecutor</code>类用于计划任务（又称定时任务），这个类有两个用途：</p>\\n<ul>\\n<li>在给定的延迟之后运行任务</li>\\n<li>周期性重复执行任务</li>\\n</ul>\\n<p>在这之前，是使用<code>Timer</code>类来完成定时任务的，但是<code>Timer</code>有缺陷：</p>\\n<ul>\\n<li>Timer是<strong>单线程</strong>模式；</li>\\n<li>如果在执行任务期间某个TimerTask耗时较久，那么就会影响其它任务的调度；</li>\\n<li>Timer的任务调度是基于绝对时间的，对<strong>系统时间</strong>敏感；</li>\\n<li>Timer不会捕获执行TimerTask时所抛出的<strong>异常</strong>，由于Timer是单线程，所以一旦出现异常，则线程就会终止，其他任务也得不到执行。</li>\\n</ul>"}');export{e as data};
